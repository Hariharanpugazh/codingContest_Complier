{"ast":null,"code":"var _jsxFileName = \"/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/components/TestCaseSelection.js\",\n  _s = $RefreshSig$();\n// src/components/TestCaseSelection.js\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestCaseSelection({\n  selectedProblem,\n  onSelectProblem\n}) {\n  _s();\n  const [problems, setProblems] = useState([]);\n\n  // Load JSON data\n  useEffect(() => {\n    fetch('/json/auto.json').then(response => response.json()).then(data => setProblems(data.problems)).catch(error => console.error(\"Error loading JSON:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-lg font-semibold\",\n      children: \"Select a problem to solve:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedProblem,\n      onChange: e => {\n        const selectedId = parseInt(e.target.value, 10); // Convert to integer\n        console.log(\"Selected Problem ID:\", selectedId);\n        onSelectProblem(selectedId);\n      },\n      className: \"w-full mt-2 p-2 border rounded\",\n      children: problems.map(problem => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: problem.id,\n        children: problem.title\n      }, problem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(TestCaseSelection, \"VBi59e6jMrp0EO3shHKvwMVAqws=\");\n_c = TestCaseSelection;\nexport default TestCaseSelection;\nvar _c;\n$RefreshReg$(_c, \"TestCaseSelection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TestCaseSelection","selectedProblem","onSelectProblem","_s","problems","setProblems","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","selectedId","parseInt","target","log","map","problem","id","title","_c","$RefreshReg$"],"sources":["/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/components/TestCaseSelection.js"],"sourcesContent":["// src/components/TestCaseSelection.js\nimport React, { useEffect, useState } from 'react';\n\nfunction TestCaseSelection({ selectedProblem, onSelectProblem }) {\n  const [problems, setProblems] = useState([]);\n\n  // Load JSON data\n  useEffect(() => {\n    fetch('/json/auto.json')\n      .then((response) => response.json())\n      .then((data) => setProblems(data.problems))\n      .catch((error) => console.error(\"Error loading JSON:\", error));\n  }, []);\n\n  return (\n    <div className=\"mb-4\">\n      <label className=\"text-lg font-semibold\">Select a problem to solve:</label>\n      <select\n        value={selectedProblem}\n        onChange={(e) => {\n          const selectedId = parseInt(e.target.value, 10); // Convert to integer\n          console.log(\"Selected Problem ID:\", selectedId);\n          onSelectProblem(selectedId);\n        }}\n        className=\"w-full mt-2 p-2 border rounded\"\n      >\n        {problems.map((problem) => (\n          <option key={problem.id} value={problem.id}>\n            {problem.title}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default TestCaseSelection;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,iBAAiBA,CAAC;EAAEC,eAAe;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,iBAAiB,CAAC,CACrBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAACN,QAAQ,CAAC,CAAC,CAC1CO,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBhB,OAAA;MAAOe,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3EpB,OAAA;MACEqB,KAAK,EAAEnB,eAAgB;MACvBoB,QAAQ,EAAGC,CAAC,IAAK;QACf,MAAMC,UAAU,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACL,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;QACjDP,OAAO,CAACa,GAAG,CAAC,sBAAsB,EAAEH,UAAU,CAAC;QAC/CrB,eAAe,CAACqB,UAAU,CAAC;MAC7B,CAAE;MACFT,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAEzCX,QAAQ,CAACuB,GAAG,CAAEC,OAAO,iBACpB7B,OAAA;QAAyBqB,KAAK,EAAEQ,OAAO,CAACC,EAAG;QAAAd,QAAA,EACxCa,OAAO,CAACE;MAAK,GADHF,OAAO,CAACC,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CA/BQH,iBAAiB;AAAA+B,EAAA,GAAjB/B,iBAAiB;AAiC1B,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}