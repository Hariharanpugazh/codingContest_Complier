{"ast":null,"code":"var _jsxFileName = \"/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/OnebyOne.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, MenuItem, Button, Grid, Box, Typography, IconButton, Select, Checkbox, ListItemText, InputLabel, FormControl } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roles = [\"Junior Developer\", \"Senior Developer\", \"AI Developer\"];\nconst OnebyOne = () => {\n  _s();\n  const [testCases, setTestCases] = useState([{\n    inputs: [''],\n    output: ''\n  }]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([{\n    inputs: [''],\n    output: ''\n  }]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [problemData, setProblemData] = useState({\n    id: '',\n    title: '',\n    description: '',\n    level: ''\n  });\n  const navigate = useNavigate();\n\n  // Save function similar to ManualSelectUI.js\n  const handleSave = async () => {\n    try {\n      // Construct the data object based on MongoDB structure\n      const updatedQuestion = {\n        id: problemData.id || null,\n        // Use null if no id is available\n        title: problemData.title,\n        problem_statement: problemData.description,\n        level: problemData.level ? problemData.level.toLowerCase() : \"\",\n        // Ensure level is a string\n        role: selectedRoles || [],\n        // Ensure this is an array\n        samples: testCases.map(testCase => ({\n          input: testCase.inputs || [],\n          // Ensure inputs is an array\n          output: testCase.output || \"\" // Ensure output is a string\n        })),\n        hidden_samples: hiddenTestCases.map(hiddenTestCase => ({\n          input: hiddenTestCase.inputs || [],\n          // Ensure inputs is an array\n          output: hiddenTestCase.output || \"\" // Ensure output is a string\n        }))\n      };\n      console.log(\"Attempting to save data:\", updatedQuestion);\n\n      // POST request to add the new question\n      const response = await axios.post('http://localhost:8000/manualProblems/', {\n        problems: [updatedQuestion]\n      });\n      console.log(\"Response:\", response.data);\n      if (response.status === 200 || response.status === 201) {\n        toast.success(\"Question saved successfully!\", {\n          autoClose: 3000\n        });\n        navigate('/hrUpload');\n      } else {\n        toast.error(\"Failed to save question.\", {\n          autoClose: 3000\n        });\n      }\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Failed to save question:\", error.response.data);\n        console.error(\"Status:\", error.response.status);\n      } else {\n        console.error(\"Error setting up the request:\", error.message);\n      }\n      toast.error(\"Failed to save question.\", {\n        autoClose: 3000\n      });\n    }\n  };\n  const handleAddTestCase = (isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const newCases = [...cases, {\n      inputs: [''],\n      output: ''\n    }];\n    isHidden ? setHiddenTestCases(newCases) : setTestCases(newCases);\n  };\n  const handleAddInputField = (testCaseIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs.push('');\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n  const handleRemoveInputField = (testCaseIndex, inputIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs = updatedCases[testCaseIndex].inputs.filter((_, idx) => idx !== inputIndex);\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n  const handleDeleteTestCase = (testCaseIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const newCases = cases.filter((_, idx) => idx !== testCaseIndex);\n    isHidden ? setHiddenTestCases(newCases) : setTestCases(newCases);\n  };\n  const handleRoleChange = event => {\n    setSelectedRoles(event.target.value);\n  };\n  const handleProblemDataChange = (field, value) => {\n    setProblemData(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    bgcolor: \"#f9f9f9\",\n    borderRadius: 2,\n    boxShadow: 3,\n    maxWidth: \"90%\",\n    mx: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Problem Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"ID\",\n          type: \"number\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problemData.id,\n          onChange: e => handleProblemDataChange('id', e.target.value),\n          onInput: e => {\n            e.target.value = e.target.value.replace(/[^0-9]/g, '');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Problem\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problemData.title,\n          onChange: e => handleProblemDataChange('title', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Description\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          multiline: true,\n          rows: 3,\n          value: problemData.description,\n          onChange: e => handleProblemDataChange('description', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Test Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), testCases && testCases.map((testCase, testCaseIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            p: 2,\n            border: \"1px solid #ddd\",\n            borderRadius: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Test Case \", testCaseIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), testCase.inputs && testCase.inputs.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: `Input ${inputIndex + 1}`,\n                variant: \"outlined\",\n                margin: \"normal\",\n                value: input,\n                onChange: e => {\n                  const updatedCases = [...testCases];\n                  updatedCases[testCaseIndex].inputs[inputIndex] = e.target.value;\n                  setTestCases(updatedCases);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), inputIndex === testCase.inputs.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleAddInputField(testCaseIndex),\n                color: \"success\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 23\n              }, this), inputIndex > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleRemoveInputField(testCaseIndex, inputIndex),\n                color: \"error\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this)]\n            }, inputIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Output\",\n              variant: \"outlined\",\n              margin: \"normal\",\n              value: testCase.output,\n              onChange: e => {\n                const updatedCases = [...testCases];\n                updatedCases[testCaseIndex].output = e.target.value;\n                setTestCases(updatedCases);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              mt: 1,\n              children: [testCaseIndex === testCases.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAddTestCase(false),\n                variant: \"contained\",\n                color: \"success\",\n                sx: {\n                  px: 2,\n                  ':hover': {\n                    backgroundColor: '#66bb6a'\n                  },\n                  fontSize: '0.8rem'\n                },\n                children: \"Add Test Case\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this), testCaseIndex > 0 && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleDeleteTestCase(testCaseIndex, false),\n                variant: \"contained\",\n                color: \"error\",\n                sx: {\n                  ml: 1,\n                  px: 2,\n                  ':hover': {\n                    backgroundColor: '#f44336'\n                  },\n                  fontSize: '0.8rem'\n                },\n                children: \"Delete Test Case\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, testCaseIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: selectedRoles,\n            onChange: handleRoleChange,\n            label: \"Roles\",\n            renderValue: selected => selected.join(', '),\n            children: roles.map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: role,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedRoles.indexOf(role) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, role, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          select: true,\n          label: \"Difficulty\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problemData.level,\n          onChange: e => handleProblemDataChange('level', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Hidden Test Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), hiddenTestCases && hiddenTestCases.map((hiddenTestCase, hiddenTestCaseIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            p: 2,\n            border: \"1px solid #ddd\",\n            borderRadius: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Hidden Test Case \", hiddenTestCaseIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), hiddenTestCase.inputs && hiddenTestCase.inputs.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: `Hidden Input ${inputIndex + 1}`,\n                variant: \"outlined\",\n                margin: \"normal\",\n                value: input,\n                onChange: e => {\n                  const updatedCases = [...hiddenTestCases];\n                  updatedCases[hiddenTestCaseIndex].inputs[inputIndex] = e.target.value;\n                  setHiddenTestCases(updatedCases);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this), inputIndex === hiddenTestCase.inputs.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleAddInputField(hiddenTestCaseIndex, true),\n                color: \"success\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this), inputIndex > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleRemoveInputField(hiddenTestCaseIndex, inputIndex, true),\n                color: \"error\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 23\n              }, this)]\n            }, inputIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Hidden Output\",\n              variant: \"outlined\",\n              margin: \"normal\",\n              value: hiddenTestCase.output,\n              onChange: e => {\n                const updatedCases = [...hiddenTestCases];\n                updatedCases[hiddenTestCaseIndex].output = e.target.value;\n                setHiddenTestCases(updatedCases);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              mt: 1,\n              children: [hiddenTestCaseIndex === hiddenTestCases.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAddTestCase(true),\n                variant: \"contained\",\n                color: \"success\",\n                sx: {\n                  px: 2,\n                  ':hover': {\n                    backgroundColor: '#66bb6a'\n                  },\n                  fontSize: '0.8rem'\n                },\n                children: \"Add Hidden Test Case\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this), hiddenTestCaseIndex > 0 && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleDeleteTestCase(hiddenTestCaseIndex, true),\n                variant: \"contained\",\n                color: \"error\",\n                sx: {\n                  ml: 1,\n                  px: 2,\n                  ':hover': {\n                    backgroundColor: '#f44336'\n                  },\n                  fontSize: '0.8rem'\n                },\n                children: \"Delete Hidden Test Case\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)]\n          }, hiddenTestCaseIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSave,\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(OnebyOne, \"dGT0Iq9FmZzp+CcVmLecd+28RFk=\", false, function () {\n  return [useNavigate];\n});\n_c = OnebyOne;\nexport default OnebyOne;\nvar _c;\n$RefreshReg$(_c, \"OnebyOne\");","map":{"version":3,"names":["React","useState","TextField","MenuItem","Button","Grid","Box","Typography","IconButton","Select","Checkbox","ListItemText","InputLabel","FormControl","AddIcon","RemoveIcon","ToastContainer","toast","axios","useNavigate","jsxDEV","_jsxDEV","roles","OnebyOne","_s","testCases","setTestCases","inputs","output","hiddenTestCases","setHiddenTestCases","selectedRoles","setSelectedRoles","problemData","setProblemData","id","title","description","level","navigate","handleSave","updatedQuestion","problem_statement","toLowerCase","role","samples","map","testCase","input","hidden_samples","hiddenTestCase","console","log","response","post","problems","data","status","success","autoClose","error","message","handleAddTestCase","isHidden","cases","newCases","handleAddInputField","testCaseIndex","updatedCases","push","handleRemoveInputField","inputIndex","filter","_","idx","handleDeleteTestCase","handleRoleChange","event","target","value","handleProblemDataChange","field","prevData","p","bgcolor","borderRadius","boxShadow","maxWidth","mx","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","fullWidth","label","type","margin","onChange","e","onInput","replace","multiline","rows","mt","mb","border","display","alignItems","length","onClick","color","sx","ml","px","backgroundColor","fontSize","multiple","renderValue","selected","join","checked","indexOf","primary","select","hiddenTestCaseIndex","justifyContent","_c","$RefreshReg$"],"sources":["/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/OnebyOne.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, MenuItem, Button, Grid, Box, Typography, IconButton, Select, Checkbox, ListItemText, InputLabel, FormControl } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst roles = [\"Junior Developer\", \"Senior Developer\", \"AI Developer\"];\n\nconst OnebyOne = () => {\n  const [testCases, setTestCases] = useState([{ inputs: [''], output: '' }]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([{ inputs: [''], output: '' }]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [problemData, setProblemData] = useState({\n    id: '',\n    title: '',\n    description: '',\n    level: '',\n  });\n  const navigate = useNavigate();\n\n  // Save function similar to ManualSelectUI.js\n  const handleSave = async () => {\n    try {\n      // Construct the data object based on MongoDB structure\n      const updatedQuestion = {\n        id: problemData.id || null, // Use null if no id is available\n        title: problemData.title,\n        problem_statement: problemData.description,\n        level: problemData.level ? problemData.level.toLowerCase() : \"\", // Ensure level is a string\n        role: selectedRoles || [], // Ensure this is an array\n        samples: testCases.map((testCase) => ({\n          input: testCase.inputs || [], // Ensure inputs is an array\n          output: testCase.output || \"\" // Ensure output is a string\n        })),\n        hidden_samples: hiddenTestCases.map((hiddenTestCase) => ({\n          input: hiddenTestCase.inputs || [], // Ensure inputs is an array\n          output: hiddenTestCase.output || \"\" // Ensure output is a string\n        })),\n      };\n  \n      console.log(\"Attempting to save data:\", updatedQuestion);\n  \n      // POST request to add the new question\n      const response = await axios.post('http://localhost:8000/manualProblems/', { problems: [updatedQuestion] });\n      console.log(\"Response:\", response.data);\n  \n      if (response.status === 200 || response.status === 201) {\n        toast.success(\"Question saved successfully!\", { autoClose: 3000 });\n        navigate('/hrUpload');\n      } else {\n        toast.error(\"Failed to save question.\", { autoClose: 3000 });\n      }\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Failed to save question:\", error.response.data);\n        console.error(\"Status:\", error.response.status);\n      } else {\n        console.error(\"Error setting up the request:\", error.message);\n      }\n      toast.error(\"Failed to save question.\", { autoClose: 3000 });\n    }\n  };\n      \n  const handleAddTestCase = (isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const newCases = [...cases, { inputs: [''], output: '' }];\n    isHidden ? setHiddenTestCases(newCases) : setTestCases(newCases);\n  };\n\n  const handleAddInputField = (testCaseIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs.push('');\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n\n  const handleRemoveInputField = (testCaseIndex, inputIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs = updatedCases[testCaseIndex].inputs.filter((_, idx) => idx !== inputIndex);\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n\n  const handleDeleteTestCase = (testCaseIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const newCases = cases.filter((_, idx) => idx !== testCaseIndex);\n    isHidden ? setHiddenTestCases(newCases) : setTestCases(newCases);\n  };\n\n  const handleRoleChange = (event) => {\n    setSelectedRoles(event.target.value);\n  };\n\n  const handleProblemDataChange = (field, value) => {\n    setProblemData((prevData) => ({ ...prevData, [field]: value }));\n  };\n\n  return (\n    <Box p={3} bgcolor=\"#f9f9f9\" borderRadius={2} boxShadow={3} maxWidth=\"90%\" mx=\"auto\">\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Problem Form\n      </Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"ID\"\n            type=\"number\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problemData.id}\n            onChange={(e) => handleProblemDataChange('id', e.target.value)}\n            onInput={(e) => {\n              e.target.value = e.target.value.replace(/[^0-9]/g, '');\n            }}\n          />\n\n          <TextField\n            fullWidth\n            label=\"Problem\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problemData.title}\n            onChange={(e) => handleProblemDataChange('title', e.target.value)}\n          />\n          <TextField\n            fullWidth\n            label=\"Description\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            multiline\n            rows={3}\n            value={problemData.description}\n            onChange={(e) => handleProblemDataChange('description', e.target.value)}\n          />\n          <Box mt={2}>\n            <Typography variant=\"h6\">Test Cases</Typography>\n            {testCases && testCases.map((testCase, testCaseIndex) => (\n              <Box key={testCaseIndex} mb={2} p={2} border=\"1px solid #ddd\" borderRadius={1}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Test Case {testCaseIndex + 1}\n                </Typography>\n                {testCase.inputs && testCase.inputs.map((input, inputIndex) => (\n                  <Box display=\"flex\" alignItems=\"center\" key={inputIndex}>\n                    <TextField\n                      fullWidth\n                      label={`Input ${inputIndex + 1}`}\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={input}\n                      onChange={(e) => {\n                        const updatedCases = [...testCases];\n                        updatedCases[testCaseIndex].inputs[inputIndex] = e.target.value;\n                        setTestCases(updatedCases);\n                      }}\n                    />\n                    {inputIndex === testCase.inputs.length - 1 && (\n                      <IconButton\n                        onClick={() => handleAddInputField(testCaseIndex)}\n                        color=\"success\"\n                        sx={{ ml: 1 }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    )}\n                    {inputIndex > 0 && (\n                      <IconButton\n                        onClick={() => handleRemoveInputField(testCaseIndex, inputIndex)}\n                        color=\"error\"\n                        sx={{ ml: 1 }}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    )}\n                  </Box>\n                ))}\n                <TextField\n                  fullWidth\n                  label=\"Output\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  value={testCase.output}\n                  onChange={(e) => {\n                    const updatedCases = [...testCases];\n                    updatedCases[testCaseIndex].output = e.target.value;\n                    setTestCases(updatedCases);\n                  }}\n                />\n                <Box display=\"flex\" mt={1}>\n                  {testCaseIndex === testCases.length - 1 && (\n                    <Button\n                      onClick={() => handleAddTestCase(false)}\n                      variant=\"contained\"\n                      color=\"success\"\n                      sx={{\n                        px: 2,\n                        ':hover': { backgroundColor: '#66bb6a' },\n                        fontSize: '0.8rem',\n                      }}\n                    >\n                      Add Test Case\n                    </Button>\n                  )}\n                  {testCaseIndex > 0 && (\n                    <Button\n                      onClick={() => handleDeleteTestCase(testCaseIndex, false)}\n                      variant=\"contained\"\n                      color=\"error\"\n                      sx={{\n                        ml: 1,\n                        px: 2,\n                        ':hover': { backgroundColor: '#f44336' },\n                        fontSize: '0.8rem',\n                      }}\n                    >\n                      Delete Test Case\n                    </Button>\n                  )}\n                </Box>\n              </Box>\n            ))}\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n            <InputLabel>Roles</InputLabel>\n            <Select\n              multiple\n              value={selectedRoles}\n              onChange={handleRoleChange}\n              label=\"Roles\"\n              renderValue={(selected) => selected.join(', ')}\n            >\n              {roles.map((role) => (\n                <MenuItem key={role} value={role}>\n                  <Checkbox checked={selectedRoles.indexOf(role) > -1} />\n                  <ListItemText primary={role} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          \n          <TextField\n            fullWidth\n            select\n            label=\"Difficulty\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problemData.level}\n            onChange={(e) => handleProblemDataChange('level', e.target.value)}\n          >\n            <MenuItem value=\"Easy\">Easy</MenuItem>\n            <MenuItem value=\"Medium\">Medium</MenuItem>\n            <MenuItem value=\"Hard\">Hard</MenuItem>\n          </TextField>\n          <Box mt={2}>\n            <Typography variant=\"h6\">Hidden Test Cases</Typography>\n            {hiddenTestCases && hiddenTestCases.map((hiddenTestCase, hiddenTestCaseIndex) => (\n              <Box key={hiddenTestCaseIndex} mb={2} p={2} border=\"1px solid #ddd\" borderRadius={1}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Hidden Test Case {hiddenTestCaseIndex + 1}\n                </Typography>\n                {hiddenTestCase.inputs && hiddenTestCase.inputs.map((input, inputIndex) => (\n                  <Box display=\"flex\" alignItems=\"center\" key={inputIndex}>\n                    <TextField\n                      fullWidth\n                      label={`Hidden Input ${inputIndex + 1}`}\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={input}\n                      onChange={(e) => {\n                        const updatedCases = [...hiddenTestCases];\n                        updatedCases[hiddenTestCaseIndex].inputs[inputIndex] = e.target.value;\n                        setHiddenTestCases(updatedCases);\n                      }}\n                    />\n                    {inputIndex === hiddenTestCase.inputs.length - 1 && (\n                      <IconButton\n                        onClick={() => handleAddInputField(hiddenTestCaseIndex, true)}\n                        color=\"success\"\n                        sx={{ ml: 1 }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    )}\n                    {inputIndex > 0 && (\n                      <IconButton\n                        onClick={() => handleRemoveInputField(hiddenTestCaseIndex, inputIndex, true)}\n                        color=\"error\"\n                        sx={{ ml: 1 }}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    )}\n                  </Box>\n                ))}\n                <TextField\n                  fullWidth\n                  label=\"Hidden Output\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  value={hiddenTestCase.output}\n                  onChange={(e) => {\n                    const updatedCases = [...hiddenTestCases];\n                    updatedCases[hiddenTestCaseIndex].output = e.target.value;\n                    setHiddenTestCases(updatedCases);\n                  }}\n                />\n                <Box display=\"flex\" mt={1}>\n                  {hiddenTestCaseIndex === hiddenTestCases.length - 1 && (\n                    <Button\n                      onClick={() => handleAddTestCase(true)}\n                      variant=\"contained\"\n                      color=\"success\"\n                      sx={{\n                        px: 2,\n                        ':hover': { backgroundColor: '#66bb6a' },\n                        fontSize: '0.8rem',\n                      }}\n                    >\n                      Add Hidden Test Case\n                    </Button>\n                  )}\n                  {hiddenTestCaseIndex > 0 && (\n                    <Button\n                      onClick={() => handleDeleteTestCase(hiddenTestCaseIndex, true)}\n                      variant=\"contained\"\n                      color=\"error\"\n                      sx={{\n                        ml: 1,\n                        px: 2,\n                        ':hover': { backgroundColor: '#f44336' },\n                        fontSize: '0.8rem',\n                      }}\n                    >\n                      Delete Hidden Test Case\n                    </Button>\n                  )}\n                </Box>\n              </Box>\n            ))}\n          </Box>\n        </Grid>\n      </Grid>\n      \n      <Box display=\"flex\" justifyContent=\"space-between\" mt={4}>\n        <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\n          Save\n        </Button>\n      </Box>\n\n      <ToastContainer />\n    </Box>\n  );\n};\n\nexport default OnebyOne;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}