{"ast":null,"code":"var _jsxFileName = \"/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/ManualSelectUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Box, Grid, IconButton, Select, MenuItem, InputLabel, FormControl, ListItemText, Checkbox, Card, CardContent } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n// Define available roles (can be customized or fetched from an API if needed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableRoles = [\"Junior Software Developer\", \"Senior Software Developer\", \"AI Developer\", \"Project Manager\"];\nconst ManualSelectUI = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const initialQuestionData = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.question) || {\n    title: '',\n    problem_statement: '',\n    samples: [],\n    hidden_samples: [],\n    role: [],\n    level: ''\n  };\n  const [questionData, setQuestionData] = useState(initialQuestionData);\n  const [testCases, setTestCases] = useState(initialQuestionData.samples.map(sample => ({\n    ...sample,\n    input: sample.input || [''] // Ensure input is an array with at least one element\n  })));\n  const [hiddenTestCases, setHiddenTestCases] = useState(initialQuestionData.hidden_samples.map(hiddenSample => ({\n    ...hiddenSample,\n    input: hiddenSample.input || [''] // Ensure input is an array with at least one element\n  })));\n  useEffect(() => {\n    if (!questionData.id) navigate('/hrUpload'); // Redirect if no question data is provided\n  }, [questionData, navigate]);\n  const handleSave = async () => {\n    try {\n      const updatedQuestion = {\n        ...questionData,\n        samples: testCases,\n        hidden_samples: hiddenTestCases\n      };\n      await axios.put('http://localhost:8000/manualProblems/', {\n        problems: [updatedQuestion]\n      });\n      navigate('/hrUpload');\n    } catch (error) {\n      console.error(\"Failed to save question:\", error);\n    }\n  };\n  const handleRoleChange = event => {\n    setQuestionData({\n      ...questionData,\n      role: event.target.value\n    });\n  };\n  const handleAddTestCase = (isHidden = false) => {\n    if (isHidden) {\n      setHiddenTestCases([...hiddenTestCases, {\n        input: [''],\n        output: ''\n      }]);\n    } else {\n      setTestCases([...testCases, {\n        input: [''],\n        output: ''\n      }]);\n    }\n  };\n  const handleRemoveTestCase = (index, isHidden = false) => {\n    if (isHidden) {\n      const updatedHiddenTestCases = [...hiddenTestCases];\n      updatedHiddenTestCases.splice(index, 1);\n      setHiddenTestCases(updatedHiddenTestCases);\n    } else {\n      const updatedTestCases = [...testCases];\n      updatedTestCases.splice(index, 1);\n      setTestCases(updatedTestCases);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    sx: {\n      backgroundColor: '#f5f5f5',\n      borderRadius: '8px',\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      sx: {\n        fontWeight: 'bold',\n        color: '#1976d2'\n      },\n      children: \"Edit Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            borderRadius: 2,\n            padding: 3,\n            boxShadow: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: \"Question Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Title\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            value: questionData.title,\n            onChange: e => setQuestionData({\n              ...questionData,\n              title: e.target.value\n            }),\n            sx: {\n              marginBottom: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Description\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            multiline: true,\n            rows: 3,\n            value: questionData.problem_statement,\n            onChange: e => setQuestionData({\n              ...questionData,\n              problem_statement: e.target.value\n            }),\n            sx: {\n              marginBottom: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            borderRadius: 2,\n            padding: 3,\n            boxShadow: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            margin: \"normal\",\n            sx: {\n              marginBottom: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Roles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              multiple: true,\n              value: questionData.role,\n              onChange: handleRoleChange,\n              renderValue: selected => selected.join(', '),\n              label: \"Roles\",\n              children: availableRoles.map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: role,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: questionData.role.includes(role)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)]\n              }, role, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Test Cases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), testCases.map((testCase, index) => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          marginBottom: '16px',\n          padding: 2,\n          borderRadius: 2,\n          boxShadow: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Test Case \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), testCase.input.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: `Input ${inputIndex + 1}`,\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: input,\n          onChange: e => {\n            const updatedTestCases = [...testCases];\n            updatedTestCases[index].input[inputIndex] = e.target.value;\n            setTestCases(updatedTestCases);\n          },\n          sx: {\n            marginBottom: '16px'\n          }\n        }, inputIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Output\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: testCase.output,\n          onChange: e => {\n            const updatedTestCases = [...testCases];\n            updatedTestCases[index].output = e.target.value;\n            setTestCases(updatedTestCases);\n          },\n          sx: {\n            marginBottom: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => handleRemoveTestCase(index),\n          color: \"error\",\n          children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleAddTestCase(false),\n        variant: \"contained\",\n        color: \"success\",\n        sx: {\n          marginBottom: '32px'\n        },\n        children: \"Add Test Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Hidden Test Cases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), hiddenTestCases.map((hiddenTestCase, index) => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          marginBottom: '16px',\n          padding: 2,\n          borderRadius: 2,\n          boxShadow: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Hidden Test Case \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), hiddenTestCase.input.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: `Hidden Input ${inputIndex + 1}`,\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: input,\n          onChange: e => {\n            const updatedHiddenTestCases = [...hiddenTestCases];\n            updatedHiddenTestCases[index].input[inputIndex] = e.target.value;\n            setHiddenTestCases(updatedHiddenTestCases);\n          },\n          sx: {\n            marginBottom: '16px'\n          }\n        }, inputIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Hidden Output\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: hiddenTestCase.output,\n          onChange: e => {\n            const updatedHiddenTestCases = [...hiddenTestCases];\n            updatedHiddenTestCases[index].output = e.target.value;\n            setHiddenTestCases(updatedHiddenTestCases);\n          },\n          sx: {\n            marginBottom: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => handleRemoveTestCase(index, true),\n          color: \"error\",\n          children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleAddTestCase(true),\n        variant: \"contained\",\n        color: \"success\",\n        sx: {\n          marginBottom: '32px'\n        },\n        children: \"Add Hidden Test Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSave,\n        sx: {\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ManualSelectUI, \"XSku1AWnIcMPWiahTj119hHiHKk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ManualSelectUI;\nexport default ManualSelectUI;\nvar _c;\n$RefreshReg$(_c, \"ManualSelectUI\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Box","Grid","IconButton","Select","MenuItem","InputLabel","FormControl","ListItemText","Checkbox","Card","CardContent","AddIcon","RemoveIcon","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","availableRoles","ManualSelectUI","_s","_location$state","location","navigate","initialQuestionData","state","question","title","problem_statement","samples","hidden_samples","role","level","questionData","setQuestionData","testCases","setTestCases","map","sample","input","hiddenTestCases","setHiddenTestCases","hiddenSample","id","handleSave","updatedQuestion","put","problems","error","console","handleRoleChange","event","target","value","handleAddTestCase","isHidden","output","handleRemoveTestCase","index","updatedHiddenTestCases","splice","updatedTestCases","p","sx","backgroundColor","borderRadius","boxShadow","children","variant","align","gutterBottom","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","padding","fullWidth","label","margin","onChange","e","marginBottom","multiline","rows","multiple","renderValue","selected","join","checked","includes","primary","mt","testCase","inputIndex","onClick","hiddenTestCase","fontSize","_c","$RefreshReg$"],"sources":["/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/ManualSelectUI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Box, Grid, IconButton, Select, MenuItem, InputLabel, FormControl, ListItemText, Checkbox, Card, CardContent } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n// Define available roles (can be customized or fetched from an API if needed)\nconst availableRoles = [\"Junior Software Developer\", \"Senior Software Developer\", \"AI Developer\", \"Project Manager\"];\n\nconst ManualSelectUI = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const initialQuestionData = location.state?.question || {\n    title: '',\n    problem_statement: '',\n    samples: [],\n    hidden_samples: [],\n    role: [],\n    level: '',\n  };\n\n  const [questionData, setQuestionData] = useState(initialQuestionData);\n  const [testCases, setTestCases] = useState(\n    initialQuestionData.samples.map(sample => ({\n      ...sample,\n      input: sample.input || ['']  // Ensure input is an array with at least one element\n    }))\n  );\n  const [hiddenTestCases, setHiddenTestCases] = useState(\n    initialQuestionData.hidden_samples.map(hiddenSample => ({\n      ...hiddenSample,\n      input: hiddenSample.input || ['']  // Ensure input is an array with at least one element\n    }))\n  );\n\n  useEffect(() => {\n    if (!questionData.id) navigate('/hrUpload'); // Redirect if no question data is provided\n  }, [questionData, navigate]);\n\n  const handleSave = async () => {\n    try {\n      const updatedQuestion = {\n        ...questionData,\n        samples: testCases,\n        hidden_samples: hiddenTestCases,\n      };\n      await axios.put('http://localhost:8000/manualProblems/', { problems: [updatedQuestion] });\n      navigate('/hrUpload');\n    } catch (error) {\n      console.error(\"Failed to save question:\", error);\n    }\n  };\n\n  const handleRoleChange = (event) => {\n    setQuestionData({ ...questionData, role: event.target.value });\n  };\n\n  const handleAddTestCase = (isHidden = false) => {\n    if (isHidden) {\n      setHiddenTestCases([...hiddenTestCases, { input: [''], output: '' }]);\n    } else {\n      setTestCases([...testCases, { input: [''], output: '' }]);\n    }\n  };\n\n  const handleRemoveTestCase = (index, isHidden = false) => {\n    if (isHidden) {\n      const updatedHiddenTestCases = [...hiddenTestCases];\n      updatedHiddenTestCases.splice(index, 1);\n      setHiddenTestCases(updatedHiddenTestCases);\n    } else {\n      const updatedTestCases = [...testCases];\n      updatedTestCases.splice(index, 1);\n      setTestCases(updatedTestCases);\n    }\n  };\n\n  return (\n    <Box p={4} sx={{ backgroundColor: '#f5f5f5', borderRadius: '8px', boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)' }}>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom sx={{ fontWeight: 'bold', color: '#1976d2' }}>\n        Edit Question\n      </Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Card sx={{ borderRadius: 2, padding: 3, boxShadow: 3 }}>\n            <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold' }}>\n              Question Details\n            </Typography>\n            <TextField\n              fullWidth\n              label=\"Title\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={questionData.title}\n              onChange={(e) => setQuestionData({ ...questionData, title: e.target.value })}\n              sx={{ marginBottom: '16px' }}\n            />\n            <TextField\n              fullWidth\n              label=\"Description\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              multiline\n              rows={3}\n              value={questionData.problem_statement}\n              onChange={(e) => setQuestionData({ ...questionData, problem_statement: e.target.value })}\n              sx={{ marginBottom: '16px' }}\n            />\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Card sx={{ borderRadius: 2, padding: 3, boxShadow: 3 }}>\n            <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold' }}>\n              Roles\n            </Typography>\n            <FormControl fullWidth variant=\"outlined\" margin=\"normal\" sx={{ marginBottom: '16px' }}>\n              <InputLabel>Roles</InputLabel>\n              <Select\n                multiple\n                value={questionData.role}\n                onChange={handleRoleChange}\n                renderValue={(selected) => selected.join(', ')}\n                label=\"Roles\"\n              >\n                {availableRoles.map((role) => (\n                  <MenuItem key={role} value={role}>\n                    <Checkbox checked={questionData.role.includes(role)} />\n                    <ListItemText primary={role} />\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Test Cases Section */}\n      <Box mt={4}>\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>Test Cases</Typography>\n        {testCases.map((testCase, index) => (\n          <Card key={index} sx={{ marginBottom: '16px', padding: 2, borderRadius: 2, boxShadow: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>Test Case {index + 1}</Typography>\n            {testCase.input.map((input, inputIndex) => (\n              <TextField\n                key={inputIndex}\n                fullWidth\n                label={`Input ${inputIndex + 1}`}\n                variant=\"outlined\"\n                margin=\"normal\"\n                value={input}\n                onChange={(e) => {\n                  const updatedTestCases = [...testCases];\n                  updatedTestCases[index].input[inputIndex] = e.target.value;\n                  setTestCases(updatedTestCases);\n                }}\n                sx={{ marginBottom: '16px' }}\n              />\n            ))}\n            <TextField\n              fullWidth\n              label=\"Output\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={testCase.output}\n              onChange={(e) => {\n                const updatedTestCases = [...testCases];\n                updatedTestCases[index].output = e.target.value;\n                setTestCases(updatedTestCases);\n              }}\n              sx={{ marginBottom: '16px' }}\n            />\n            <IconButton onClick={() => handleRemoveTestCase(index)} color=\"error\">\n              <RemoveIcon />\n            </IconButton>\n          </Card>\n        ))}\n        <Button onClick={() => handleAddTestCase(false)} variant=\"contained\" color=\"success\" sx={{ marginBottom: '32px' }}>\n          Add Test Case\n        </Button>\n      </Box>\n\n      {/* Hidden Test Cases Section */}\n      <Box mt={4}>\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>Hidden Test Cases</Typography>\n        {hiddenTestCases.map((hiddenTestCase, index) => (\n          <Card key={index} sx={{ marginBottom: '16px', padding: 2, borderRadius: 2, boxShadow: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>Hidden Test Case {index + 1}</Typography>\n            {hiddenTestCase.input.map((input, inputIndex) => (\n              <TextField\n                key={inputIndex}\n                fullWidth\n                label={`Hidden Input ${inputIndex + 1}`}\n                variant=\"outlined\"\n                margin=\"normal\"\n                value={input}\n                onChange={(e) => {\n                  const updatedHiddenTestCases = [...hiddenTestCases];\n                  updatedHiddenTestCases[index].input[inputIndex] = e.target.value;\n                  setHiddenTestCases(updatedHiddenTestCases);\n                }}\n                sx={{ marginBottom: '16px' }}\n              />\n            ))}\n            <TextField\n              fullWidth\n              label=\"Hidden Output\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={hiddenTestCase.output}\n              onChange={(e) => {\n                const updatedHiddenTestCases = [...hiddenTestCases];\n                updatedHiddenTestCases[index].output = e.target.value;\n                setHiddenTestCases(updatedHiddenTestCases);\n              }}\n              sx={{ marginBottom: '16px' }}\n            />\n            <IconButton onClick={() => handleRemoveTestCase(index, true)} color=\"error\">\n              <RemoveIcon />\n            </IconButton>\n          </Card>\n        ))}\n        <Button onClick={() => handleAddTestCase(true)} variant=\"contained\" color=\"success\" sx={{ marginBottom: '32px' }}>\n          Add Hidden Test Case\n        </Button>\n      </Box>\n\n      <Box mt={4}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSave} sx={{ padding: '10px 20px', fontSize: '16px' }}>\n          Save\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ManualSelectUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}