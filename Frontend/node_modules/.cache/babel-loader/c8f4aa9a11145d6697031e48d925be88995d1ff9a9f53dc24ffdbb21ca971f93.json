{"ast":null,"code":"var _jsxFileName = \"/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/ManualSelectUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, MenuItem, Button, Grid, Box, Typography, IconButton, Select, Checkbox, ListItemText, InputLabel, FormControl } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport PreviewButton from '../components/previewButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roles = [\"Junior Developer\", \"Senior Developer\", \"AI Developer\"];\nconst ManualSelectUI = ({\n  problemData,\n  onSave\n}) => {\n  _s();\n  const [testCases, setTestCases] = useState([{\n    inputs: [''],\n    output: ''\n  }]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([{\n    inputs: [''],\n    output: ''\n  }]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [problem, setProblem] = useState({\n    id: '',\n    title: '',\n    description: '',\n    level: ''\n  });\n\n  // Load problem data on mount or when problemData changes\n  useEffect(() => {\n    if (problemData) {\n      setProblem({\n        id: problemData.id || '',\n        title: problemData.title || '',\n        description: problemData.problem_statement || '',\n        level: problemData.level || ''\n      });\n      setSelectedRoles(problemData.role || []);\n      setTestCases(problemData.samples || [{\n        inputs: [''],\n        output: ''\n      }]);\n      setHiddenTestCases(problemData.hidden_samples || [{\n        inputs: [''],\n        output: ''\n      }]);\n    }\n  }, [problemData]);\n  const handleRoleChange = event => {\n    setSelectedRoles(event.target.value);\n  };\n  const handleProblemDataChange = (field, value) => {\n    setProblem(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n  const saveProblemAsJson = async () => {\n    const problemJson = {\n      id: parseInt(problem.id, 10),\n      title: problem.title,\n      role: selectedRoles,\n      level: problem.level.toLowerCase(),\n      problem_statement: problem.description,\n      samples: testCases.map(testCase => ({\n        input: testCase.inputs.map(input => `${input}`),\n        output: `${testCase.output}`\n      })),\n      hidden_samples: hiddenTestCases.map(hiddenTestCase => ({\n        input: hiddenTestCase.inputs.map(input => `${input}`),\n        output: `${hiddenTestCase.output}`\n      }))\n    };\n    try {\n      await axios.put('http://localhost:8000/updateQuestionById/', problemJson);\n      toast.success(\"Problem updated successfully!\");\n      onSave(); // Clear the selected problem and navigate back\n    } catch (error) {\n      toast.error(\"Failed to save problem data.\");\n      console.error(\"Error saving problem:\", error);\n    }\n  };\n  ;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    bgcolor: \"#f9f9f9\",\n    borderRadius: 2,\n    boxShadow: 3,\n    maxWidth: \"90%\",\n    mx: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Problem Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"ID\",\n          type: \"number\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problemData.id,\n          onChange: e => handleProblemDataChange('id', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Problem\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problemData.title,\n          onChange: e => handleProblemDataChange('title', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Description\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          multiline: true,\n          rows: 3,\n          value: problemData.description,\n          onChange: e => handleProblemDataChange('description', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Test Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), testCases && testCases.map((testCase, testCaseIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            p: 2,\n            border: \"1px solid #ddd\",\n            borderRadius: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Test Case \", testCaseIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), testCase.inputs && testCase.inputs.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: `Input ${inputIndex + 1}`,\n                variant: \"outlined\",\n                margin: \"normal\",\n                value: input,\n                onChange: e => {\n                  const updatedCases = [...testCases];\n                  updatedCases[testCaseIndex].inputs[inputIndex] = e.target.value;\n                  setTestCases(updatedCases);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this), inputIndex === testCase.inputs.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleAddInputField(testCaseIndex),\n                color: \"success\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 23\n              }, this), inputIndex > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleRemoveInputField(testCaseIndex, inputIndex),\n                color: \"error\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 23\n              }, this)]\n            }, inputIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Output\",\n              variant: \"outlined\",\n              margin: \"normal\",\n              value: testCase.output,\n              onChange: e => {\n                const updatedCases = [...testCases];\n                updatedCases[testCaseIndex].output = e.target.value;\n                setTestCases(updatedCases);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), testCaseIndex === testCases.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleAddTestCase(false),\n              variant: \"contained\",\n              color: \"success\",\n              sx: {\n                mt: 1,\n                px: 2,\n                ':hover': {\n                  backgroundColor: '#66bb6a'\n                },\n                fontSize: '0.8rem'\n              },\n              children: \"Add Test Case\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)]\n          }, testCaseIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: selectedRoles,\n            onChange: handleRoleChange,\n            label: \"Roles\",\n            renderValue: selected => selected.join(', '),\n            children: roles.map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: role,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedRoles.indexOf(role) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)]\n            }, role, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          select: true,\n          label: \"Difficulty\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problemData.level,\n          onChange: e => handleProblemDataChange('level', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Hidden Test Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), hiddenTestCases && hiddenTestCases.map((hiddenTestCase, hiddenTestCaseIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            p: 2,\n            border: \"1px solid #ddd\",\n            borderRadius: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Hidden Test Case \", hiddenTestCaseIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), hiddenTestCase.inputs && hiddenTestCase.inputs.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: `Hidden Input ${inputIndex + 1}`,\n                variant: \"outlined\",\n                margin: \"normal\",\n                value: input,\n                onChange: e => {\n                  const updatedCases = [...hiddenTestCases];\n                  updatedCases[hiddenTestCaseIndex].inputs[inputIndex] = e.target.value;\n                  setHiddenTestCases(updatedCases);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), inputIndex === hiddenTestCase.inputs.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleAddInputField(hiddenTestCaseIndex, true),\n                color: \"success\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), inputIndex > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleRemoveInputField(hiddenTestCaseIndex, inputIndex, true),\n                color: \"error\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this)]\n            }, inputIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Hidden Output\",\n              variant: \"outlined\",\n              margin: \"normal\",\n              value: hiddenTestCase.output,\n              onChange: e => {\n                const updatedCases = [...hiddenTestCases];\n                updatedCases[hiddenTestCaseIndex].output = e.target.value;\n                setHiddenTestCases(updatedCases);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), hiddenTestCaseIndex === hiddenTestCases.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleAddTestCase(true),\n              variant: \"contained\",\n              color: \"success\",\n              sx: {\n                mt: 1,\n                px: 2,\n                ':hover': {\n                  backgroundColor: '#66bb6a'\n                },\n                fontSize: '0.8rem'\n              },\n              children: \"Add Hidden Test Case\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, hiddenTestCaseIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: saveProblemAsJson,\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PreviewButton, {\n        onEditProblem: loadProblemData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ManualSelectUI, \"/abVrXifEbg09uor9vHRYSUfhpg=\");\n_c = ManualSelectUI;\nexport default ProblemForm;\nvar _c;\n$RefreshReg$(_c, \"ManualSelectUI\");","map":{"version":3,"names":["React","useState","TextField","MenuItem","Button","Grid","Box","Typography","IconButton","Select","Checkbox","ListItemText","InputLabel","FormControl","AddIcon","RemoveIcon","ToastContainer","toast","axios","PreviewButton","jsxDEV","_jsxDEV","roles","ManualSelectUI","problemData","onSave","_s","testCases","setTestCases","inputs","output","hiddenTestCases","setHiddenTestCases","selectedRoles","setSelectedRoles","problem","setProblem","id","title","description","level","useEffect","problem_statement","role","samples","hidden_samples","handleRoleChange","event","target","value","handleProblemDataChange","field","prevData","saveProblemAsJson","problemJson","parseInt","toLowerCase","map","testCase","input","hiddenTestCase","put","success","error","console","p","bgcolor","borderRadius","boxShadow","maxWidth","mx","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","fullWidth","label","type","margin","onChange","e","multiline","rows","mt","testCaseIndex","mb","border","inputIndex","display","alignItems","updatedCases","length","onClick","handleAddInputField","color","sx","ml","handleRemoveInputField","handleAddTestCase","px","backgroundColor","fontSize","multiple","renderValue","selected","join","checked","indexOf","primary","select","hiddenTestCaseIndex","justifyContent","onEditProblem","loadProblemData","_c","ProblemForm","$RefreshReg$"],"sources":["/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/ManualSelectUI.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, MenuItem, Button, Grid, Box, Typography, IconButton, Select, Checkbox, ListItemText, InputLabel, FormControl } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport PreviewButton from '../components/previewButton';\n\nconst roles = [\"Junior Developer\", \"Senior Developer\", \"AI Developer\"];\n\nconst ManualSelectUI = ({ problemData, onSave }) => {\n  const [testCases, setTestCases] = useState([{ inputs: [''], output: '' }]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([{ inputs: [''], output: '' }]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [problem, setProblem] = useState({\n    id: '',\n    title: '',\n    description: '',\n    level: '',\n  });\n\n  // Load problem data on mount or when problemData changes\n  useEffect(() => {\n    if (problemData) {\n      setProblem({\n        id: problemData.id || '',\n        title: problemData.title || '',\n        description: problemData.problem_statement || '',\n        level: problemData.level || '',\n      });\n      setSelectedRoles(problemData.role || []);\n      setTestCases(problemData.samples || [{ inputs: [''], output: '' }]);\n      setHiddenTestCases(problemData.hidden_samples || [{ inputs: [''], output: '' }]);\n    }\n  }, [problemData]);\n\n  const handleRoleChange = (event) => {\n    setSelectedRoles(event.target.value);\n  };\n\n  const handleProblemDataChange = (field, value) => {\n    setProblem((prevData) => ({ ...prevData, [field]: value }));\n  };\n\n  const saveProblemAsJson = async () => {\n    const problemJson = {\n      id: parseInt(problem.id, 10),\n      title: problem.title,\n      role: selectedRoles,\n      level: problem.level.toLowerCase(),\n      problem_statement: problem.description,\n      samples: testCases.map((testCase) => ({\n        input: testCase.inputs.map(input => `${input}`),\n        output: `${testCase.output}`\n      })),\n      hidden_samples: hiddenTestCases.map((hiddenTestCase) => ({\n        input: hiddenTestCase.inputs.map(input => `${input}`),\n        output: `${hiddenTestCase.output}`\n      }))\n    };\n\n    try {\n      await axios.put('http://localhost:8000/updateQuestionById/', problemJson);\n      toast.success(\"Problem updated successfully!\");\n      onSave(); // Clear the selected problem and navigate back\n    } catch (error) {\n      toast.error(\"Failed to save problem data.\");\n      console.error(\"Error saving problem:\", error);\n    }\n  };;\n\n  return (\n    <Box p={3} bgcolor=\"#f9f9f9\" borderRadius={2} boxShadow={3} maxWidth=\"90%\" mx=\"auto\">\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Problem Form\n      </Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"ID\"\n            type=\"number\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problemData.id}\n            onChange={(e) => handleProblemDataChange('id', e.target.value)}\n          />\n          <TextField\n            fullWidth\n            label=\"Problem\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problemData.title}\n            onChange={(e) => handleProblemDataChange('title', e.target.value)}\n          />\n          <TextField\n            fullWidth\n            label=\"Description\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            multiline\n            rows={3}\n            value={problemData.description}\n            onChange={(e) => handleProblemDataChange('description', e.target.value)}\n          />\n          <Box mt={2}>\n            <Typography variant=\"h6\">Test Cases</Typography>\n            {testCases && testCases.map((testCase, testCaseIndex) => (\n              <Box key={testCaseIndex} mb={2} p={2} border=\"1px solid #ddd\" borderRadius={1}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Test Case {testCaseIndex + 1}\n                </Typography>\n                {testCase.inputs && testCase.inputs.map((input, inputIndex) => (\n                  <Box display=\"flex\" alignItems=\"center\" key={inputIndex}>\n                    <TextField\n                      fullWidth\n                      label={`Input ${inputIndex + 1}`}\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={input}\n                      onChange={(e) => {\n                        const updatedCases = [...testCases];\n                        updatedCases[testCaseIndex].inputs[inputIndex] = e.target.value;\n                        setTestCases(updatedCases);\n                      }}\n                    />\n                    {inputIndex === testCase.inputs.length - 1 && (\n                      <IconButton\n                        onClick={() => handleAddInputField(testCaseIndex)}\n                        color=\"success\"\n                        sx={{ ml: 1 }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    )}\n                    {inputIndex > 0 && (\n                      <IconButton\n                        onClick={() => handleRemoveInputField(testCaseIndex, inputIndex)}\n                        color=\"error\"\n                        sx={{ ml: 1 }}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    )}\n                  </Box>\n                ))}\n                <TextField\n                  fullWidth\n                  label=\"Output\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  value={testCase.output}\n                  onChange={(e) => {\n                    const updatedCases = [...testCases];\n                    updatedCases[testCaseIndex].output = e.target.value;\n                    setTestCases(updatedCases);\n                  }}\n                />\n                {testCaseIndex === testCases.length - 1 && (\n                  <Button\n                    onClick={() => handleAddTestCase(false)}\n                    variant=\"contained\"\n                    color=\"success\"\n                    sx={{\n                      mt: 1,\n                      px: 2,\n                      ':hover': { backgroundColor: '#66bb6a' },\n                      fontSize: '0.8rem',\n                    }}\n                  >\n                    Add Test Case\n                  </Button>\n                )}\n              </Box>\n            ))}\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n            <InputLabel>Roles</InputLabel>\n            <Select\n              multiple\n              value={selectedRoles}\n              onChange={handleRoleChange}\n              label=\"Roles\"\n              renderValue={(selected) => selected.join(', ')}\n            >\n              {roles.map((role) => (\n                <MenuItem key={role} value={role}>\n                  <Checkbox checked={selectedRoles.indexOf(role) > -1} />\n                  <ListItemText primary={role} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          \n          <TextField\n            fullWidth\n            select\n            label=\"Difficulty\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problemData.level}\n            onChange={(e) => handleProblemDataChange('level', e.target.value)}\n          >\n            <MenuItem value=\"Easy\">Easy</MenuItem>\n            <MenuItem value=\"Medium\">Medium</MenuItem>\n            <MenuItem value=\"Hard\">Hard</MenuItem>\n          </TextField>\n          <Box mt={2}>\n            <Typography variant=\"h6\">Hidden Test Cases</Typography>\n            {hiddenTestCases && hiddenTestCases.map((hiddenTestCase, hiddenTestCaseIndex) => (\n              <Box key={hiddenTestCaseIndex} mb={2} p={2} border=\"1px solid #ddd\" borderRadius={1}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Hidden Test Case {hiddenTestCaseIndex + 1}\n                </Typography>\n                {hiddenTestCase.inputs && hiddenTestCase.inputs.map((input, inputIndex) => (\n                  <Box display=\"flex\" alignItems=\"center\" key={inputIndex}>\n                    <TextField\n                      fullWidth\n                      label={`Hidden Input ${inputIndex + 1}`}\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={input}\n                      onChange={(e) => {\n                        const updatedCases = [...hiddenTestCases];\n                        updatedCases[hiddenTestCaseIndex].inputs[inputIndex] = e.target.value;\n                        setHiddenTestCases(updatedCases);\n                      }}\n                    />\n                    {inputIndex === hiddenTestCase.inputs.length - 1 && (\n                      <IconButton\n                        onClick={() => handleAddInputField(hiddenTestCaseIndex, true)}\n                        color=\"success\"\n                        sx={{ ml: 1 }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    )}\n                    {inputIndex > 0 && (\n                      <IconButton\n                        onClick={() => handleRemoveInputField(hiddenTestCaseIndex, inputIndex, true)}\n                        color=\"error\"\n                        sx={{ ml: 1 }}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    )}\n                  </Box>\n                ))}\n                <TextField\n                  fullWidth\n                  label=\"Hidden Output\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  value={hiddenTestCase.output}\n                  onChange={(e) => {\n                    const updatedCases = [...hiddenTestCases];\n                    updatedCases[hiddenTestCaseIndex].output = e.target.value;\n                    setHiddenTestCases(updatedCases);\n                  }}\n                />\n                {hiddenTestCaseIndex === hiddenTestCases.length - 1 && (\n                  <Button\n                    onClick={() => handleAddTestCase(true)}\n                    variant=\"contained\"\n                    color=\"success\"\n                    sx={{\n                      mt: 1,\n                      px: 2,\n                      ':hover': { backgroundColor: '#66bb6a' },\n                      fontSize: '0.8rem',\n                    }}\n                  >\n                    Add Hidden Test Case\n                  </Button>\n                )}\n              </Box>\n            ))}\n          </Box>\n        </Grid>\n      </Grid>\n      \n      <Box display=\"flex\" justifyContent=\"space-between\" mt={4}>\n        <Button variant=\"contained\" onClick={saveProblemAsJson} color=\"primary\">\n          Save\n        </Button>\n        <PreviewButton onEditProblem={loadProblemData} />\n      </Box>\n\n      <ToastContainer />\n    </Box>\n  );\n};\n\nexport default ProblemForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}