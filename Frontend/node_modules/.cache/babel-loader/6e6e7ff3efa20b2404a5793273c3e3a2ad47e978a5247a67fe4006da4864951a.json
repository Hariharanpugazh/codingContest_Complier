{"ast":null,"code":"var _jsxFileName = \"/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/ManualSelectUI.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TextField, MenuItem, Button, Grid, Box, Typography, IconButton, Select, Checkbox, ListItemText, InputLabel, FormControl } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport PreviewButton from '../components/previewButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roles = [\"Junior Developer\", \"Senior Developer\", \"AI Developer\"];\nconst loadProblemData = problem => {\n  setProblemData({\n    id: problem.id || '',\n    title: problem.title || '',\n    description: problem.problem_statement || '',\n    level: problem.level ? problem.level.charAt(0).toUpperCase() + problem.level.slice(1) : ''\n  });\n  setSelectedRoles(problem.role || []);\n\n  // Safely set test cases\n  setTestCases(problem.samples && Array.isArray(problem.samples) && problem.samples.length > 0 ? problem.samples.map(testCase => ({\n    inputs: testCase.input ? [...testCase.input] : [''],\n    output: testCase.output || ''\n  })) : [{\n    inputs: [''],\n    output: ''\n  }]);\n\n  // Safely set hidden test cases\n  setHiddenTestCases(problem.hidden_samples && Array.isArray(problem.hidden_samples) && problem.hidden_samples.length > 0 ? problem.hidden_samples.map(hiddenTestCase => ({\n    inputs: hiddenTestCase.input ? [...hiddenTestCase.input] : [''],\n    output: hiddenTestCase.output || ''\n  })) : [{\n    inputs: [''],\n    output: ''\n  }]);\n};\nconst ProblemForm = ({\n  problemData,\n  onSave\n}) => {\n  _s();\n  const [testCases, setTestCases] = useState([{\n    inputs: [''],\n    output: ''\n  }]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([{\n    inputs: [''],\n    output: ''\n  }]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [problem, setProblem] = useState({\n    id: '',\n    title: '',\n    description: '',\n    level: ''\n  });\n\n  // Load problem data on mount or when problemData changes\n  useEffect(() => {\n    if (problemData) {\n      setProblem({\n        id: problemData.id || '',\n        title: problemData.title || '',\n        description: problemData.problem_statement || '',\n        level: problemData.level || ''\n      });\n      setSelectedRoles(problemData.role || []);\n      setTestCases(problemData.samples || [{\n        inputs: [''],\n        output: ''\n      }]);\n      setHiddenTestCases(problemData.hidden_samples || [{\n        inputs: [''],\n        output: ''\n      }]);\n    }\n  }, [problemData]);\n  const handleRoleChange = event => {\n    setSelectedRoles(event.target.value);\n  };\n  const handleProblemDataChange = (field, value) => {\n    setProblem(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n  const handleAddTestCase = (isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const newCases = [...cases, {\n      inputs: [''],\n      output: ''\n    }];\n    isHidden ? setHiddenTestCases(newCases) : setTestCases(newCases);\n  };\n  const handleAddInputField = (testCaseIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs.push('');\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n  const handleRemoveInputField = (testCaseIndex, inputIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs = updatedCases[testCaseIndex].inputs.filter((_, idx) => idx !== inputIndex);\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n  const saveProblemAsJson = async () => {\n    const problemJson = {\n      id: parseInt(problem.id, 10),\n      title: problem.title,\n      role: selectedRoles,\n      level: problem.level.toLowerCase(),\n      problem_statement: problem.description,\n      samples: testCases.map(testCase => ({\n        input: testCase.inputs.map(input => `${input}`),\n        output: `${testCase.output}`\n      })),\n      hidden_samples: hiddenTestCases.map(hiddenTestCase => ({\n        input: hiddenTestCase.inputs.map(input => `${input}`),\n        output: `${hiddenTestCase.output}`\n      }))\n    };\n    try {\n      await axios.put('http://localhost:8000/updateQuestionById/', problemJson);\n      toast.success(\"Problem updated successfully!\");\n      onSave(); // Clear the selected problem and navigate back\n    } catch (error) {\n      toast.error(\"Failed to save problem data.\");\n      console.error(\"Error saving problem:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    bgcolor: \"#f9f9f9\",\n    borderRadius: 2,\n    boxShadow: 3,\n    maxWidth: \"90%\",\n    mx: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Edit Problem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"ID\",\n          type: \"number\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problem.id,\n          onChange: e => handleProblemDataChange('id', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Title\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problem.title,\n          onChange: e => handleProblemDataChange('title', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Description\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          multiline: true,\n          rows: 3,\n          value: problem.description,\n          onChange: e => handleProblemDataChange('description', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: selectedRoles,\n            onChange: handleRoleChange,\n            label: \"Roles\",\n            renderValue: selected => selected.join(', '),\n            children: roles.map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: role,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedRoles.indexOf(role) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)]\n            }, role, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          select: true,\n          label: \"Difficulty\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problem.level,\n          onChange: e => handleProblemDataChange('level', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Test Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), testCases.map((testCase, testCaseIndex) => /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          p: 2,\n          border: \"1px solid #ddd\",\n          borderRadius: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Test Case \", testCaseIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), testCase.inputs.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: `Input ${inputIndex + 1}`,\n              variant: \"outlined\",\n              margin: \"normal\",\n              value: input,\n              onChange: e => {\n                const updatedCases = [...testCases];\n                updatedCases[testCaseIndex].inputs[inputIndex] = e.target.value;\n                setTestCases(updatedCases);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), inputIndex === testCase.inputs.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleAddInputField(testCaseIndex),\n              color: \"success\",\n              sx: {\n                ml: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this), inputIndex > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleRemoveInputField(testCaseIndex, inputIndex),\n              color: \"error\",\n              sx: {\n                ml: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, this)]\n          }, inputIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Output\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            value: testCase.output,\n            onChange: e => {\n              const updatedCases = [...testCases];\n              updatedCases[testCaseIndex].output = e.target.value;\n              setTestCases(updatedCases);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, testCaseIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleAddTestCase(false),\n          variant: \"contained\",\n          color: \"success\",\n          children: \"Add Test Case\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Hidden Test Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), hiddenTestCases.map((hiddenTestCase, hiddenTestCaseIndex) => /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          p: 2,\n          border: \"1px solid #ddd\",\n          borderRadius: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Hidden Test Case \", hiddenTestCaseIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), hiddenTestCase.inputs.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: `Hidden Input ${inputIndex + 1}`,\n              variant: \"outlined\",\n              margin: \"normal\",\n              value: input,\n              onChange: e => {\n                const updatedCases = [...hiddenTestCases];\n                updatedCases[hiddenTestCaseIndex].inputs[inputIndex] = e.target.value;\n                setHiddenTestCases(updatedCases);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), inputIndex === hiddenTestCase.inputs.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleAddInputField(hiddenTestCaseIndex, true),\n              color: \"success\",\n              sx: {\n                ml: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this), inputIndex > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleRemoveInputField(hiddenTestCaseIndex, inputIndex, true),\n              color: \"error\",\n              sx: {\n                ml: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 21\n            }, this)]\n          }, inputIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Hidden Output\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            value: hiddenTestCase.output,\n            onChange: e => {\n              const updatedCases = [...hiddenTestCases];\n              updatedCases[hiddenTestCaseIndex].output = e.target.value;\n              setHiddenTestCases(updatedCases);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, hiddenTestCaseIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleAddTestCase(true),\n          variant: \"contained\",\n          color: \"success\",\n          children: \"Add Hidden Test Case\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: saveProblemAsJson,\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PreviewButton, {\n        onEditProblem: loadProblemData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ProblemForm, \"/abVrXifEbg09uor9vHRYSUfhpg=\");\n_c = ProblemForm;\nexport default ProblemForm;\nvar _c;\n$RefreshReg$(_c, \"ProblemForm\");","map":{"version":3,"names":["React","useEffect","useState","TextField","MenuItem","Button","Grid","Box","Typography","IconButton","Select","Checkbox","ListItemText","InputLabel","FormControl","AddIcon","RemoveIcon","ToastContainer","toast","axios","PreviewButton","jsxDEV","_jsxDEV","roles","loadProblemData","problem","setProblemData","id","title","description","problem_statement","level","charAt","toUpperCase","slice","setSelectedRoles","role","setTestCases","samples","Array","isArray","length","map","testCase","inputs","input","output","setHiddenTestCases","hidden_samples","hiddenTestCase","ProblemForm","problemData","onSave","_s","testCases","hiddenTestCases","selectedRoles","setProblem","handleRoleChange","event","target","value","handleProblemDataChange","field","prevData","handleAddTestCase","isHidden","cases","newCases","handleAddInputField","testCaseIndex","updatedCases","push","handleRemoveInputField","inputIndex","filter","_","idx","saveProblemAsJson","problemJson","parseInt","toLowerCase","put","success","error","console","p","bgcolor","borderRadius","boxShadow","maxWidth","mx","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","fullWidth","label","type","margin","onChange","e","multiline","rows","multiple","renderValue","selected","join","checked","indexOf","primary","select","mb","border","display","alignItems","onClick","color","sx","ml","hiddenTestCaseIndex","justifyContent","mt","onEditProblem","_c","$RefreshReg$"],"sources":["/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/ManualSelectUI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TextField, MenuItem, Button, Grid, Box, Typography, IconButton, Select, Checkbox, ListItemText, InputLabel, FormControl } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport PreviewButton from '../components/previewButton';\n\nconst roles = [\"Junior Developer\", \"Senior Developer\", \"AI Developer\"];\n\nconst loadProblemData = (problem) => {\n  setProblemData({\n    id: problem.id || '',\n    title: problem.title || '',\n    description: problem.problem_statement || '',\n    level: problem.level ? problem.level.charAt(0).toUpperCase() + problem.level.slice(1) : '',\n  });\n\n  setSelectedRoles(problem.role || []);\n\n  // Safely set test cases\n  setTestCases(\n    problem.samples && Array.isArray(problem.samples) && problem.samples.length > 0\n      ? problem.samples.map(testCase => ({\n          inputs: testCase.input ? [...testCase.input] : [''],\n          output: testCase.output || ''\n        }))\n      : [{ inputs: [''], output: '' }]\n  );\n\n  // Safely set hidden test cases\n  setHiddenTestCases(\n    problem.hidden_samples && Array.isArray(problem.hidden_samples) && problem.hidden_samples.length > 0\n      ? problem.hidden_samples.map(hiddenTestCase => ({\n          inputs: hiddenTestCase.input ? [...hiddenTestCase.input] : [''],\n          output: hiddenTestCase.output || ''\n        }))\n      : [{ inputs: [''], output: '' }]\n  );\n};\n\nconst ProblemForm = ({ problemData, onSave }) => {\n  const [testCases, setTestCases] = useState([{ inputs: [''], output: '' }]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([{ inputs: [''], output: '' }]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [problem, setProblem] = useState({\n    id: '',\n    title: '',\n    description: '',\n    level: '',\n  });\n\n  // Load problem data on mount or when problemData changes\n  useEffect(() => {\n    if (problemData) {\n      setProblem({\n        id: problemData.id || '',\n        title: problemData.title || '',\n        description: problemData.problem_statement || '',\n        level: problemData.level || '',\n      });\n      setSelectedRoles(problemData.role || []);\n      setTestCases(problemData.samples || [{ inputs: [''], output: '' }]);\n      setHiddenTestCases(problemData.hidden_samples || [{ inputs: [''], output: '' }]);\n    }\n  }, [problemData]);\n\n  const handleRoleChange = (event) => {\n    setSelectedRoles(event.target.value);\n  };\n\n  const handleProblemDataChange = (field, value) => {\n    setProblem((prevData) => ({ ...prevData, [field]: value }));\n  };\n\n  const handleAddTestCase = (isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const newCases = [...cases, { inputs: [''], output: '' }];\n    isHidden ? setHiddenTestCases(newCases) : setTestCases(newCases);\n  };\n\n  const handleAddInputField = (testCaseIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs.push('');\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n\n  const handleRemoveInputField = (testCaseIndex, inputIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs = updatedCases[testCaseIndex].inputs.filter((_, idx) => idx !== inputIndex);\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n\n  const saveProblemAsJson = async () => {\n    const problemJson = {\n      id: parseInt(problem.id, 10),\n      title: problem.title,\n      role: selectedRoles,\n      level: problem.level.toLowerCase(),\n      problem_statement: problem.description,\n      samples: testCases.map((testCase) => ({\n        input: testCase.inputs.map(input => `${input}`),\n        output: `${testCase.output}`\n      })),\n      hidden_samples: hiddenTestCases.map((hiddenTestCase) => ({\n        input: hiddenTestCase.inputs.map(input => `${input}`),\n        output: `${hiddenTestCase.output}`\n      }))\n    };\n\n    try {\n      await axios.put('http://localhost:8000/updateQuestionById/', problemJson);\n      toast.success(\"Problem updated successfully!\");\n      onSave(); // Clear the selected problem and navigate back\n    } catch (error) {\n      toast.error(\"Failed to save problem data.\");\n      console.error(\"Error saving problem:\", error);\n    }\n  };\n\n  return (\n    <Box p={3} bgcolor=\"#f9f9f9\" borderRadius={2} boxShadow={3} maxWidth=\"90%\" mx=\"auto\">\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Edit Problem\n      </Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"ID\"\n            type=\"number\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problem.id}\n            onChange={(e) => handleProblemDataChange('id', e.target.value)}\n          />\n          <TextField\n            fullWidth\n            label=\"Title\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problem.title}\n            onChange={(e) => handleProblemDataChange('title', e.target.value)}\n          />\n          <TextField\n            fullWidth\n            label=\"Description\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            multiline\n            rows={3}\n            value={problem.description}\n            onChange={(e) => handleProblemDataChange('description', e.target.value)}\n          />\n          <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n            <InputLabel>Roles</InputLabel>\n            <Select\n              multiple\n              value={selectedRoles}\n              onChange={handleRoleChange}\n              label=\"Roles\"\n              renderValue={(selected) => selected.join(', ')}\n            >\n              {roles.map((role) => (\n                <MenuItem key={role} value={role}>\n                  <Checkbox checked={selectedRoles.indexOf(role) > -1} />\n                  <ListItemText primary={role} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          \n          <TextField\n            fullWidth\n            select\n            label=\"Difficulty\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problem.level}\n            onChange={(e) => handleProblemDataChange('level', e.target.value)}\n          >\n            <MenuItem value=\"Easy\">Easy</MenuItem>\n            <MenuItem value=\"Medium\">Medium</MenuItem>\n            <MenuItem value=\"Hard\">Hard</MenuItem>\n          </TextField>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h6\">Test Cases</Typography>\n          {testCases.map((testCase, testCaseIndex) => (\n            <Box key={testCaseIndex} mb={2} p={2} border=\"1px solid #ddd\" borderRadius={1}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Test Case {testCaseIndex + 1}\n              </Typography>\n              {testCase.inputs.map((input, inputIndex) => (\n                <Box display=\"flex\" alignItems=\"center\" key={inputIndex}>\n                  <TextField\n                    fullWidth\n                    label={`Input ${inputIndex + 1}`}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    value={input}\n                    onChange={(e) => {\n                      const updatedCases = [...testCases];\n                      updatedCases[testCaseIndex].inputs[inputIndex] = e.target.value;\n                      setTestCases(updatedCases);\n                    }}\n                  />\n                  {inputIndex === testCase.inputs.length - 1 && (\n                    <IconButton\n                      onClick={() => handleAddInputField(testCaseIndex)}\n                      color=\"success\"\n                      sx={{ ml: 1 }}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  )}\n                  {inputIndex > 0 && (\n                    <IconButton\n                      onClick={() => handleRemoveInputField(testCaseIndex, inputIndex)}\n                      color=\"error\"\n                      sx={{ ml: 1 }}\n                    >\n                      <RemoveIcon />\n                    </IconButton>\n                  )}\n                </Box>\n              ))}\n              <TextField\n                fullWidth\n                label=\"Output\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                value={testCase.output}\n                onChange={(e) => {\n                  const updatedCases = [...testCases];\n                  updatedCases[testCaseIndex].output = e.target.value;\n                  setTestCases(updatedCases);\n                }}\n              />\n            </Box>\n          ))}\n          <Button onClick={() => handleAddTestCase(false)} variant=\"contained\" color=\"success\">\n            Add Test Case\n          </Button>\n        </Grid>\n        \n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h6\">Hidden Test Cases</Typography>\n          {hiddenTestCases.map((hiddenTestCase, hiddenTestCaseIndex) => (\n            <Box key={hiddenTestCaseIndex} mb={2} p={2} border=\"1px solid #ddd\" borderRadius={1}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Hidden Test Case {hiddenTestCaseIndex + 1}\n              </Typography>\n              {hiddenTestCase.inputs.map((input, inputIndex) => (\n                <Box display=\"flex\" alignItems=\"center\" key={inputIndex}>\n                  <TextField\n                    fullWidth\n                    label={`Hidden Input ${inputIndex + 1}`}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    value={input}\n                    onChange={(e) => {\n                      const updatedCases = [...hiddenTestCases];\n                      updatedCases[hiddenTestCaseIndex].inputs[inputIndex] = e.target.value;\n                      setHiddenTestCases(updatedCases);\n                    }}\n                  />\n                  {inputIndex === hiddenTestCase.inputs.length - 1 && (\n                    <IconButton\n                      onClick={() => handleAddInputField(hiddenTestCaseIndex, true)}\n                      color=\"success\"\n                      sx={{ ml: 1 }}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  )}\n                  {inputIndex > 0 && (\n                    <IconButton\n                      onClick={() => handleRemoveInputField(hiddenTestCaseIndex, inputIndex, true)}\n                      color=\"error\"\n                      sx={{ ml: 1 }}\n                    >\n                      <RemoveIcon />\n                    </IconButton>\n                  )}\n                </Box>\n              ))}\n              <TextField\n                fullWidth\n                label=\"Hidden Output\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                value={hiddenTestCase.output}\n                onChange={(e) => {\n                  const updatedCases = [...hiddenTestCases];\n                  updatedCases[hiddenTestCaseIndex].output = e.target.value;\n                  setHiddenTestCases(updatedCases);\n                }}\n              />\n            </Box>\n          ))}\n          <Button onClick={() => handleAddTestCase(true)} variant=\"contained\" color=\"success\">\n            Add Hidden Test Case\n          </Button>\n        </Grid>\n      </Grid>\n      \n      <Box display=\"flex\" justifyContent=\"space-between\" mt={4}>\n        <Button variant=\"contained\" onClick={saveProblemAsJson} color=\"primary\">\n          Save\n        </Button>\n        <PreviewButton onEditProblem={loadProblemData} />\n      </Box>\n\n      <ToastContainer />\n    </Box>\n  );\n};\n\nexport default ProblemForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,EAAEC,WAAW,QAAQ,eAAe;AACvJ,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAG,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,cAAc,CAAC;AAEtE,MAAMC,eAAe,GAAIC,OAAO,IAAK;EACnCC,cAAc,CAAC;IACbC,EAAE,EAAEF,OAAO,CAACE,EAAE,IAAI,EAAE;IACpBC,KAAK,EAAEH,OAAO,CAACG,KAAK,IAAI,EAAE;IAC1BC,WAAW,EAAEJ,OAAO,CAACK,iBAAiB,IAAI,EAAE;IAC5CC,KAAK,EAAEN,OAAO,CAACM,KAAK,GAAGN,OAAO,CAACM,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGR,OAAO,CAACM,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,GAAG;EAC1F,CAAC,CAAC;EAEFC,gBAAgB,CAACV,OAAO,CAACW,IAAI,IAAI,EAAE,CAAC;;EAEpC;EACAC,YAAY,CACVZ,OAAO,CAACa,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACf,OAAO,CAACa,OAAO,CAAC,IAAIb,OAAO,CAACa,OAAO,CAACG,MAAM,GAAG,CAAC,GAC3EhB,OAAO,CAACa,OAAO,CAACI,GAAG,CAACC,QAAQ,KAAK;IAC/BC,MAAM,EAAED,QAAQ,CAACE,KAAK,GAAG,CAAC,GAAGF,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;IACnDC,MAAM,EAAEH,QAAQ,CAACG,MAAM,IAAI;EAC7B,CAAC,CAAC,CAAC,GACH,CAAC;IAAEF,MAAM,EAAE,CAAC,EAAE,CAAC;IAAEE,MAAM,EAAE;EAAG,CAAC,CACnC,CAAC;;EAED;EACAC,kBAAkB,CAChBtB,OAAO,CAACuB,cAAc,IAAIT,KAAK,CAACC,OAAO,CAACf,OAAO,CAACuB,cAAc,CAAC,IAAIvB,OAAO,CAACuB,cAAc,CAACP,MAAM,GAAG,CAAC,GAChGhB,OAAO,CAACuB,cAAc,CAACN,GAAG,CAACO,cAAc,KAAK;IAC5CL,MAAM,EAAEK,cAAc,CAACJ,KAAK,GAAG,CAAC,GAAGI,cAAc,CAACJ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;IAC/DC,MAAM,EAAEG,cAAc,CAACH,MAAM,IAAI;EACnC,CAAC,CAAC,CAAC,GACH,CAAC;IAAEF,MAAM,EAAE,CAAC,EAAE,CAAC;IAAEE,MAAM,EAAE;EAAG,CAAC,CACnC,CAAC;AACH,CAAC;AAED,MAAMI,WAAW,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,SAAS,EAAEjB,YAAY,CAAC,GAAGnC,QAAQ,CAAC,CAAC;IAAE0C,MAAM,EAAE,CAAC,EAAE,CAAC;IAAEE,MAAM,EAAE;EAAG,CAAC,CAAC,CAAC;EAC1E,MAAM,CAACS,eAAe,EAAER,kBAAkB,CAAC,GAAG7C,QAAQ,CAAC,CAAC;IAAE0C,MAAM,EAAE,CAAC,EAAE,CAAC;IAAEE,MAAM,EAAE;EAAG,CAAC,CAAC,CAAC;EACtF,MAAM,CAACU,aAAa,EAAErB,gBAAgB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,OAAO,EAAEgC,UAAU,CAAC,GAAGvD,QAAQ,CAAC;IACrCyB,EAAE,EAAE,EAAE;IACNC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfE,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;EACA9B,SAAS,CAAC,MAAM;IACd,IAAIkD,WAAW,EAAE;MACfM,UAAU,CAAC;QACT9B,EAAE,EAAEwB,WAAW,CAACxB,EAAE,IAAI,EAAE;QACxBC,KAAK,EAAEuB,WAAW,CAACvB,KAAK,IAAI,EAAE;QAC9BC,WAAW,EAAEsB,WAAW,CAACrB,iBAAiB,IAAI,EAAE;QAChDC,KAAK,EAAEoB,WAAW,CAACpB,KAAK,IAAI;MAC9B,CAAC,CAAC;MACFI,gBAAgB,CAACgB,WAAW,CAACf,IAAI,IAAI,EAAE,CAAC;MACxCC,YAAY,CAACc,WAAW,CAACb,OAAO,IAAI,CAAC;QAAEM,MAAM,EAAE,CAAC,EAAE,CAAC;QAAEE,MAAM,EAAE;MAAG,CAAC,CAAC,CAAC;MACnEC,kBAAkB,CAACI,WAAW,CAACH,cAAc,IAAI,CAAC;QAAEJ,MAAM,EAAE,CAAC,EAAE,CAAC;QAAEE,MAAM,EAAE;MAAG,CAAC,CAAC,CAAC;IAClF;EACF,CAAC,EAAE,CAACK,WAAW,CAAC,CAAC;EAEjB,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClCxB,gBAAgB,CAACwB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMC,uBAAuB,GAAGA,CAACC,KAAK,EAAEF,KAAK,KAAK;IAChDJ,UAAU,CAAEO,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACD,KAAK,GAAGF;IAAM,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMI,iBAAiB,GAAGA,CAACC,QAAQ,GAAG,KAAK,KAAK;IAC9C,MAAMC,KAAK,GAAGD,QAAQ,GAAGX,eAAe,GAAGD,SAAS;IACpD,MAAMc,QAAQ,GAAG,CAAC,GAAGD,KAAK,EAAE;MAAEvB,MAAM,EAAE,CAAC,EAAE,CAAC;MAAEE,MAAM,EAAE;IAAG,CAAC,CAAC;IACzDoB,QAAQ,GAAGnB,kBAAkB,CAACqB,QAAQ,CAAC,GAAG/B,YAAY,CAAC+B,QAAQ,CAAC;EAClE,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAACC,aAAa,EAAEJ,QAAQ,GAAG,KAAK,KAAK;IAC/D,MAAMC,KAAK,GAAGD,QAAQ,GAAGX,eAAe,GAAGD,SAAS;IACpD,MAAMiB,YAAY,GAAG,CAAC,GAAGJ,KAAK,CAAC;IAC/BI,YAAY,CAACD,aAAa,CAAC,CAAC1B,MAAM,CAAC4B,IAAI,CAAC,EAAE,CAAC;IAC3CN,QAAQ,GAAGnB,kBAAkB,CAACwB,YAAY,CAAC,GAAGlC,YAAY,CAACkC,YAAY,CAAC;EAC1E,CAAC;EAED,MAAME,sBAAsB,GAAGA,CAACH,aAAa,EAAEI,UAAU,EAAER,QAAQ,GAAG,KAAK,KAAK;IAC9E,MAAMC,KAAK,GAAGD,QAAQ,GAAGX,eAAe,GAAGD,SAAS;IACpD,MAAMiB,YAAY,GAAG,CAAC,GAAGJ,KAAK,CAAC;IAC/BI,YAAY,CAACD,aAAa,CAAC,CAAC1B,MAAM,GAAG2B,YAAY,CAACD,aAAa,CAAC,CAAC1B,MAAM,CAAC+B,MAAM,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAKA,GAAG,KAAKH,UAAU,CAAC;IAC9GR,QAAQ,GAAGnB,kBAAkB,CAACwB,YAAY,CAAC,GAAGlC,YAAY,CAACkC,YAAY,CAAC;EAC1E,CAAC;EAED,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,WAAW,GAAG;MAClBpD,EAAE,EAAEqD,QAAQ,CAACvD,OAAO,CAACE,EAAE,EAAE,EAAE,CAAC;MAC5BC,KAAK,EAAEH,OAAO,CAACG,KAAK;MACpBQ,IAAI,EAAEoB,aAAa;MACnBzB,KAAK,EAAEN,OAAO,CAACM,KAAK,CAACkD,WAAW,CAAC,CAAC;MAClCnD,iBAAiB,EAAEL,OAAO,CAACI,WAAW;MACtCS,OAAO,EAAEgB,SAAS,CAACZ,GAAG,CAAEC,QAAQ,KAAM;QACpCE,KAAK,EAAEF,QAAQ,CAACC,MAAM,CAACF,GAAG,CAACG,KAAK,IAAI,GAAGA,KAAK,EAAE,CAAC;QAC/CC,MAAM,EAAE,GAAGH,QAAQ,CAACG,MAAM;MAC5B,CAAC,CAAC,CAAC;MACHE,cAAc,EAAEO,eAAe,CAACb,GAAG,CAAEO,cAAc,KAAM;QACvDJ,KAAK,EAAEI,cAAc,CAACL,MAAM,CAACF,GAAG,CAACG,KAAK,IAAI,GAAGA,KAAK,EAAE,CAAC;QACrDC,MAAM,EAAE,GAAGG,cAAc,CAACH,MAAM;MAClC,CAAC,CAAC;IACJ,CAAC;IAED,IAAI;MACF,MAAM3B,KAAK,CAAC+D,GAAG,CAAC,2CAA2C,EAAEH,WAAW,CAAC;MACzE7D,KAAK,CAACiE,OAAO,CAAC,+BAA+B,CAAC;MAC9C/B,MAAM,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOgC,KAAK,EAAE;MACdlE,KAAK,CAACkE,KAAK,CAAC,8BAA8B,CAAC;MAC3CC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACE9D,OAAA,CAACf,GAAG;IAAC+E,CAAC,EAAE,CAAE;IAACC,OAAO,EAAC,SAAS;IAACC,YAAY,EAAE,CAAE;IAACC,SAAS,EAAE,CAAE;IAACC,QAAQ,EAAC,KAAK;IAACC,EAAE,EAAC,MAAM;IAAAC,QAAA,gBAClFtE,OAAA,CAACd,UAAU;MAACqF,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,QAAQ;MAACC,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb7E,OAAA,CAAChB,IAAI;MAAC8F,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAT,QAAA,gBACzBtE,OAAA,CAAChB,IAAI;QAACgG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAZ,QAAA,gBACvBtE,OAAA,CAACnB,SAAS;UACRsG,SAAS;UACTC,KAAK,EAAC,IAAI;UACVC,IAAI,EAAC,QAAQ;UACbd,OAAO,EAAC,UAAU;UAClBe,MAAM,EAAC,QAAQ;UACf/C,KAAK,EAAEpC,OAAO,CAACE,EAAG;UAClBkF,QAAQ,EAAGC,CAAC,IAAKhD,uBAAuB,CAAC,IAAI,EAAEgD,CAAC,CAAClD,MAAM,CAACC,KAAK;QAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eACF7E,OAAA,CAACnB,SAAS;UACRsG,SAAS;UACTC,KAAK,EAAC,OAAO;UACbb,OAAO,EAAC,UAAU;UAClBe,MAAM,EAAC,QAAQ;UACf/C,KAAK,EAAEpC,OAAO,CAACG,KAAM;UACrBiF,QAAQ,EAAGC,CAAC,IAAKhD,uBAAuB,CAAC,OAAO,EAAEgD,CAAC,CAAClD,MAAM,CAACC,KAAK;QAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eACF7E,OAAA,CAACnB,SAAS;UACRsG,SAAS;UACTC,KAAK,EAAC,aAAa;UACnBb,OAAO,EAAC,UAAU;UAClBe,MAAM,EAAC,QAAQ;UACfG,SAAS;UACTC,IAAI,EAAE,CAAE;UACRnD,KAAK,EAAEpC,OAAO,CAACI,WAAY;UAC3BgF,QAAQ,EAAGC,CAAC,IAAKhD,uBAAuB,CAAC,aAAa,EAAEgD,CAAC,CAAClD,MAAM,CAACC,KAAK;QAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eACF7E,OAAA,CAACR,WAAW;UAAC2F,SAAS;UAACZ,OAAO,EAAC,UAAU;UAACe,MAAM,EAAC,QAAQ;UAAAhB,QAAA,gBACvDtE,OAAA,CAACT,UAAU;YAAA+E,QAAA,EAAC;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9B7E,OAAA,CAACZ,MAAM;YACLuG,QAAQ;YACRpD,KAAK,EAAEL,aAAc;YACrBqD,QAAQ,EAAEnD,gBAAiB;YAC3BgD,KAAK,EAAC,OAAO;YACbQ,WAAW,EAAGC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAE;YAAAxB,QAAA,EAE9CrE,KAAK,CAACmB,GAAG,CAAEN,IAAI,iBACdd,OAAA,CAAClB,QAAQ;cAAYyD,KAAK,EAAEzB,IAAK;cAAAwD,QAAA,gBAC/BtE,OAAA,CAACX,QAAQ;gBAAC0G,OAAO,EAAE7D,aAAa,CAAC8D,OAAO,CAAClF,IAAI,CAAC,GAAG,CAAC;cAAE;gBAAA4D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvD7E,OAAA,CAACV,YAAY;gBAAC2G,OAAO,EAAEnF;cAAK;gBAAA4D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA,GAFlB/D,IAAI;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGT,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEd7E,OAAA,CAACnB,SAAS;UACRsG,SAAS;UACTe,MAAM;UACNd,KAAK,EAAC,YAAY;UAClBb,OAAO,EAAC,UAAU;UAClBe,MAAM,EAAC,QAAQ;UACf/C,KAAK,EAAEpC,OAAO,CAACM,KAAM;UACrB8E,QAAQ,EAAGC,CAAC,IAAKhD,uBAAuB,CAAC,OAAO,EAAEgD,CAAC,CAAClD,MAAM,CAACC,KAAK,CAAE;UAAA+B,QAAA,gBAElEtE,OAAA,CAAClB,QAAQ;YAACyD,KAAK,EAAC,MAAM;YAAA+B,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACtC7E,OAAA,CAAClB,QAAQ;YAACyD,KAAK,EAAC,QAAQ;YAAA+B,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eAC1C7E,OAAA,CAAClB,QAAQ;YAACyD,KAAK,EAAC,MAAM;YAAA+B,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEP7E,OAAA,CAAChB,IAAI;QAACgG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAZ,QAAA,gBACvBtE,OAAA,CAACd,UAAU;UAACqF,OAAO,EAAC,IAAI;UAAAD,QAAA,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EAC/C7C,SAAS,CAACZ,GAAG,CAAC,CAACC,QAAQ,EAAE2B,aAAa,kBACrChD,OAAA,CAACf,GAAG;UAAqBkH,EAAE,EAAE,CAAE;UAACnC,CAAC,EAAE,CAAE;UAACoC,MAAM,EAAC,gBAAgB;UAAClC,YAAY,EAAE,CAAE;UAAAI,QAAA,gBAC5EtE,OAAA,CAACd,UAAU;YAACqF,OAAO,EAAC,WAAW;YAACE,YAAY;YAAAH,QAAA,GAAC,YACjC,EAACtB,aAAa,GAAG,CAAC;UAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,EACZxD,QAAQ,CAACC,MAAM,CAACF,GAAG,CAAC,CAACG,KAAK,EAAE6B,UAAU,kBACrCpD,OAAA,CAACf,GAAG;YAACoH,OAAO,EAAC,MAAM;YAACC,UAAU,EAAC,QAAQ;YAAAhC,QAAA,gBACrCtE,OAAA,CAACnB,SAAS;cACRsG,SAAS;cACTC,KAAK,EAAE,SAAShC,UAAU,GAAG,CAAC,EAAG;cACjCmB,OAAO,EAAC,UAAU;cAClBe,MAAM,EAAC,QAAQ;cACf/C,KAAK,EAAEhB,KAAM;cACbgE,QAAQ,EAAGC,CAAC,IAAK;gBACf,MAAMvC,YAAY,GAAG,CAAC,GAAGjB,SAAS,CAAC;gBACnCiB,YAAY,CAACD,aAAa,CAAC,CAAC1B,MAAM,CAAC8B,UAAU,CAAC,GAAGoC,CAAC,CAAClD,MAAM,CAACC,KAAK;gBAC/DxB,YAAY,CAACkC,YAAY,CAAC;cAC5B;YAAE;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,EACDzB,UAAU,KAAK/B,QAAQ,CAACC,MAAM,CAACH,MAAM,GAAG,CAAC,iBACxCnB,OAAA,CAACb,UAAU;cACToH,OAAO,EAAEA,CAAA,KAAMxD,mBAAmB,CAACC,aAAa,CAAE;cAClDwD,KAAK,EAAC,SAAS;cACfC,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE,CAAE;cAAApC,QAAA,eAEdtE,OAAA,CAACP,OAAO;gBAAAiF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACb,EACAzB,UAAU,GAAG,CAAC,iBACbpD,OAAA,CAACb,UAAU;cACToH,OAAO,EAAEA,CAAA,KAAMpD,sBAAsB,CAACH,aAAa,EAAEI,UAAU,CAAE;cACjEoD,KAAK,EAAC,OAAO;cACbC,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE,CAAE;cAAApC,QAAA,eAEdtE,OAAA,CAACN,UAAU;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACb;UAAA,GA9B0CzB,UAAU;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA+BlD,CACN,CAAC,eACF7E,OAAA,CAACnB,SAAS;YACRsG,SAAS;YACTC,KAAK,EAAC,QAAQ;YACdb,OAAO,EAAC,UAAU;YAClBe,MAAM,EAAC,QAAQ;YACf/C,KAAK,EAAElB,QAAQ,CAACG,MAAO;YACvB+D,QAAQ,EAAGC,CAAC,IAAK;cACf,MAAMvC,YAAY,GAAG,CAAC,GAAGjB,SAAS,CAAC;cACnCiB,YAAY,CAACD,aAAa,CAAC,CAACxB,MAAM,GAAGgE,CAAC,CAAClD,MAAM,CAACC,KAAK;cACnDxB,YAAY,CAACkC,YAAY,CAAC;YAC5B;UAAE;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAjDM7B,aAAa;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkDlB,CACN,CAAC,eACF7E,OAAA,CAACjB,MAAM;UAACwH,OAAO,EAAEA,CAAA,KAAM5D,iBAAiB,CAAC,KAAK,CAAE;UAAC4B,OAAO,EAAC,WAAW;UAACiC,KAAK,EAAC,SAAS;UAAAlC,QAAA,EAAC;QAErF;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEP7E,OAAA,CAAChB,IAAI;QAACgG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAZ,QAAA,gBACvBtE,OAAA,CAACd,UAAU;UAACqF,OAAO,EAAC,IAAI;UAAAD,QAAA,EAAC;QAAiB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EACtD5C,eAAe,CAACb,GAAG,CAAC,CAACO,cAAc,EAAEgF,mBAAmB,kBACvD3G,OAAA,CAACf,GAAG;UAA2BkH,EAAE,EAAE,CAAE;UAACnC,CAAC,EAAE,CAAE;UAACoC,MAAM,EAAC,gBAAgB;UAAClC,YAAY,EAAE,CAAE;UAAAI,QAAA,gBAClFtE,OAAA,CAACd,UAAU;YAACqF,OAAO,EAAC,WAAW;YAACE,YAAY;YAAAH,QAAA,GAAC,mBAC1B,EAACqC,mBAAmB,GAAG,CAAC;UAAA;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,EACZlD,cAAc,CAACL,MAAM,CAACF,GAAG,CAAC,CAACG,KAAK,EAAE6B,UAAU,kBAC3CpD,OAAA,CAACf,GAAG;YAACoH,OAAO,EAAC,MAAM;YAACC,UAAU,EAAC,QAAQ;YAAAhC,QAAA,gBACrCtE,OAAA,CAACnB,SAAS;cACRsG,SAAS;cACTC,KAAK,EAAE,gBAAgBhC,UAAU,GAAG,CAAC,EAAG;cACxCmB,OAAO,EAAC,UAAU;cAClBe,MAAM,EAAC,QAAQ;cACf/C,KAAK,EAAEhB,KAAM;cACbgE,QAAQ,EAAGC,CAAC,IAAK;gBACf,MAAMvC,YAAY,GAAG,CAAC,GAAGhB,eAAe,CAAC;gBACzCgB,YAAY,CAAC0D,mBAAmB,CAAC,CAACrF,MAAM,CAAC8B,UAAU,CAAC,GAAGoC,CAAC,CAAClD,MAAM,CAACC,KAAK;gBACrEd,kBAAkB,CAACwB,YAAY,CAAC;cAClC;YAAE;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,EACDzB,UAAU,KAAKzB,cAAc,CAACL,MAAM,CAACH,MAAM,GAAG,CAAC,iBAC9CnB,OAAA,CAACb,UAAU;cACToH,OAAO,EAAEA,CAAA,KAAMxD,mBAAmB,CAAC4D,mBAAmB,EAAE,IAAI,CAAE;cAC9DH,KAAK,EAAC,SAAS;cACfC,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE,CAAE;cAAApC,QAAA,eAEdtE,OAAA,CAACP,OAAO;gBAAAiF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACb,EACAzB,UAAU,GAAG,CAAC,iBACbpD,OAAA,CAACb,UAAU;cACToH,OAAO,EAAEA,CAAA,KAAMpD,sBAAsB,CAACwD,mBAAmB,EAAEvD,UAAU,EAAE,IAAI,CAAE;cAC7EoD,KAAK,EAAC,OAAO;cACbC,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE,CAAE;cAAApC,QAAA,eAEdtE,OAAA,CAACN,UAAU;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACb;UAAA,GA9B0CzB,UAAU;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA+BlD,CACN,CAAC,eACF7E,OAAA,CAACnB,SAAS;YACRsG,SAAS;YACTC,KAAK,EAAC,eAAe;YACrBb,OAAO,EAAC,UAAU;YAClBe,MAAM,EAAC,QAAQ;YACf/C,KAAK,EAAEZ,cAAc,CAACH,MAAO;YAC7B+D,QAAQ,EAAGC,CAAC,IAAK;cACf,MAAMvC,YAAY,GAAG,CAAC,GAAGhB,eAAe,CAAC;cACzCgB,YAAY,CAAC0D,mBAAmB,CAAC,CAACnF,MAAM,GAAGgE,CAAC,CAAClD,MAAM,CAACC,KAAK;cACzDd,kBAAkB,CAACwB,YAAY,CAAC;YAClC;UAAE;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAjDM8B,mBAAmB;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkDxB,CACN,CAAC,eACF7E,OAAA,CAACjB,MAAM;UAACwH,OAAO,EAAEA,CAAA,KAAM5D,iBAAiB,CAAC,IAAI,CAAE;UAAC4B,OAAO,EAAC,WAAW;UAACiC,KAAK,EAAC,SAAS;UAAAlC,QAAA,EAAC;QAEpF;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEP7E,OAAA,CAACf,GAAG;MAACoH,OAAO,EAAC,MAAM;MAACO,cAAc,EAAC,eAAe;MAACC,EAAE,EAAE,CAAE;MAAAvC,QAAA,gBACvDtE,OAAA,CAACjB,MAAM;QAACwF,OAAO,EAAC,WAAW;QAACgC,OAAO,EAAE/C,iBAAkB;QAACgD,KAAK,EAAC,SAAS;QAAAlC,QAAA,EAAC;MAExE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7E,OAAA,CAACF,aAAa;QAACgH,aAAa,EAAE5G;MAAgB;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAEN7E,OAAA,CAACL,cAAc;MAAA+E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAC9C,EAAA,CAvRIH,WAAW;AAAAmF,EAAA,GAAXnF,WAAW;AAyRjB,eAAeA,WAAW;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}