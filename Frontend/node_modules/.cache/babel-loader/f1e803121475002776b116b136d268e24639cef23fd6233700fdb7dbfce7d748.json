{"ast":null,"code":"var _jsxFileName = \"/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/ManualSelectUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, MenuItem, Button, Grid, Box, Typography, IconButton, Select, Checkbox, ListItemText, InputLabel, FormControl } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport PreviewButton from '../components/previewButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roles = [\"Junior Developer\", \"Senior Developer\", \"AI Developer\"];\nconst ProblemForm = () => {\n  _s();\n  const [testCases, setTestCases] = useState([{\n    inputs: [''],\n    output: ''\n  }]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([{\n    inputs: [''],\n    output: ''\n  }]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [problemData, setProblemData] = useState({\n    id: '',\n    title: '',\n    description: '',\n    level: ''\n  });\n\n  // Function to load problem data for modification\n  const loadProblemData = problem => {\n    setProblemData({\n      id: problem.id || '',\n      title: problem.title || '',\n      description: problem.problem_statement || '',\n      level: problem.level ? problem.level.charAt(0).toUpperCase() + problem.level.slice(1) : ''\n    });\n    setSelectedRoles(problem.role || []);\n\n    // Safely set test cases, ensuring each has the necessary structure\n    setTestCases(problem.samples && Array.isArray(problem.samples) && problem.samples.length > 0 ? problem.samples.map(testCase => ({\n      inputs: testCase.input ? [...testCase.input] : [''],\n      // Ensuring inputs is an array\n      output: testCase.output || ''\n    })) : [{\n      inputs: [''],\n      output: ''\n    }]);\n\n    // Safely set hidden test cases, ensuring each has the necessary structure\n    setHiddenTestCases(problem.hidden_samples && Array.isArray(problem.hidden_samples) && problem.hidden_samples.length > 0 ? problem.hidden_samples.map(hiddenTestCase => ({\n      inputs: hiddenTestCase.input ? [...hiddenTestCase.input] : [''],\n      // Ensuring inputs is an array\n      output: hiddenTestCase.output || ''\n    })) : [{\n      inputs: [''],\n      output: ''\n    }]);\n  };\n  const handleAddTestCase = (isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const newCases = [...cases, {\n      inputs: [''],\n      output: ''\n    }];\n    isHidden ? setHiddenTestCases(newCases) : setTestCases(newCases);\n  };\n  const handleAddInputField = (testCaseIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs.push('');\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n  const handleRemoveInputField = (testCaseIndex, inputIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs = updatedCases[testCaseIndex].inputs.filter((_, idx) => idx !== inputIndex);\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n  const handleRoleChange = event => {\n    setSelectedRoles(event.target.value);\n  };\n  const handleProblemDataChange = (field, value) => {\n    setProblemData(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n  const saveProblemAsJson = async () => {\n    const problemJson = {\n      id: parseInt(problem.id, 10),\n      title: problem.title,\n      role: selectedRoles,\n      level: problem.level.toLowerCase(),\n      problem_statement: problem.description,\n      samples: testCases.map(testCase => ({\n        input: testCase.inputs.map(input => `${input}`),\n        output: `${testCase.output}`\n      })),\n      hidden_samples: hiddenTestCases.map(hiddenTestCase => ({\n        input: hiddenTestCase.inputs.map(input => `${input}`),\n        output: `${hiddenTestCase.output}`\n      }))\n    };\n    try {\n      await axios.put('http://localhost:8000/updateQuestionById/', problemJson);\n      toast.success(\"Problem updated successfully!\");\n      onSave(); // Clear the selected problem and navigate back\n    } catch (error) {\n      toast.error(\"Failed to save problem data.\");\n      console.error(\"Error saving problem:\", error);\n    }\n  };\n  ;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    bgcolor: \"#f9f9f9\",\n    borderRadius: 2,\n    boxShadow: 3,\n    maxWidth: \"90%\",\n    mx: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Problem Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"ID\",\n          type: \"number\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problemData.id,\n          onChange: e => handleProblemDataChange('id', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Problem\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problemData.title,\n          onChange: e => handleProblemDataChange('title', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Description\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          multiline: true,\n          rows: 3,\n          value: problemData.description,\n          onChange: e => handleProblemDataChange('description', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Test Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), testCases && testCases.map((testCase, testCaseIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            p: 2,\n            border: \"1px solid #ddd\",\n            borderRadius: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Test Case \", testCaseIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), testCase.inputs && testCase.inputs.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: `Input ${inputIndex + 1}`,\n                variant: \"outlined\",\n                margin: \"normal\",\n                value: input,\n                onChange: e => {\n                  const updatedCases = [...testCases];\n                  updatedCases[testCaseIndex].inputs[inputIndex] = e.target.value;\n                  setTestCases(updatedCases);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this), inputIndex === testCase.inputs.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleAddInputField(testCaseIndex),\n                color: \"success\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 23\n              }, this), inputIndex > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleRemoveInputField(testCaseIndex, inputIndex),\n                color: \"error\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this)]\n            }, inputIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Output\",\n              variant: \"outlined\",\n              margin: \"normal\",\n              value: testCase.output,\n              onChange: e => {\n                const updatedCases = [...testCases];\n                updatedCases[testCaseIndex].output = e.target.value;\n                setTestCases(updatedCases);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), testCaseIndex === testCases.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleAddTestCase(false),\n              variant: \"contained\",\n              color: \"success\",\n              sx: {\n                mt: 1,\n                px: 2,\n                ':hover': {\n                  backgroundColor: '#66bb6a'\n                },\n                fontSize: '0.8rem'\n              },\n              children: \"Add Test Case\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this)]\n          }, testCaseIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: selectedRoles,\n            onChange: handleRoleChange,\n            label: \"Roles\",\n            renderValue: selected => selected.join(', '),\n            children: roles.map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: role,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedRoles.indexOf(role) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, role, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          select: true,\n          label: \"Difficulty\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: problemData.level,\n          onChange: e => handleProblemDataChange('level', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Hidden Test Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), hiddenTestCases && hiddenTestCases.map((hiddenTestCase, hiddenTestCaseIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            p: 2,\n            border: \"1px solid #ddd\",\n            borderRadius: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Hidden Test Case \", hiddenTestCaseIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), hiddenTestCase.inputs && hiddenTestCase.inputs.map((input, inputIndex) => /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: `Hidden Input ${inputIndex + 1}`,\n                variant: \"outlined\",\n                margin: \"normal\",\n                value: input,\n                onChange: e => {\n                  const updatedCases = [...hiddenTestCases];\n                  updatedCases[hiddenTestCaseIndex].inputs[inputIndex] = e.target.value;\n                  setHiddenTestCases(updatedCases);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), inputIndex === hiddenTestCase.inputs.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleAddInputField(hiddenTestCaseIndex, true),\n                color: \"success\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 23\n              }, this), inputIndex > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleRemoveInputField(hiddenTestCaseIndex, inputIndex, true),\n                color: \"error\",\n                sx: {\n                  ml: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 23\n              }, this)]\n            }, inputIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Hidden Output\",\n              variant: \"outlined\",\n              margin: \"normal\",\n              value: hiddenTestCase.output,\n              onChange: e => {\n                const updatedCases = [...hiddenTestCases];\n                updatedCases[hiddenTestCaseIndex].output = e.target.value;\n                setHiddenTestCases(updatedCases);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), hiddenTestCaseIndex === hiddenTestCases.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleAddTestCase(true),\n              variant: \"contained\",\n              color: \"success\",\n              sx: {\n                mt: 1,\n                px: 2,\n                ':hover': {\n                  backgroundColor: '#66bb6a'\n                },\n                fontSize: '0.8rem'\n              },\n              children: \"Add Hidden Test Case\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)]\n          }, hiddenTestCaseIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: saveProblemAsJson,\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PreviewButton, {\n        onEditProblem: loadProblemData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(ProblemForm, \"8/vfaYmJFhE72uTNX261c2rEqNs=\");\n_c = ProblemForm;\nexport default ProblemForm;\nvar _c;\n$RefreshReg$(_c, \"ProblemForm\");","map":{"version":3,"names":["React","useState","TextField","MenuItem","Button","Grid","Box","Typography","IconButton","Select","Checkbox","ListItemText","InputLabel","FormControl","AddIcon","RemoveIcon","ToastContainer","toast","axios","PreviewButton","jsxDEV","_jsxDEV","roles","ProblemForm","_s","testCases","setTestCases","inputs","output","hiddenTestCases","setHiddenTestCases","selectedRoles","setSelectedRoles","problemData","setProblemData","id","title","description","level","loadProblemData","problem","problem_statement","charAt","toUpperCase","slice","role","samples","Array","isArray","length","map","testCase","input","hidden_samples","hiddenTestCase","handleAddTestCase","isHidden","cases","newCases","handleAddInputField","testCaseIndex","updatedCases","push","handleRemoveInputField","inputIndex","filter","_","idx","handleRoleChange","event","target","value","handleProblemDataChange","field","prevData","saveProblemAsJson","problemJson","parseInt","toLowerCase","put","success","onSave","error","console","p","bgcolor","borderRadius","boxShadow","maxWidth","mx","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","fullWidth","label","type","margin","onChange","e","multiline","rows","mt","mb","border","display","alignItems","onClick","color","sx","ml","px","backgroundColor","fontSize","multiple","renderValue","selected","join","checked","indexOf","primary","select","hiddenTestCaseIndex","justifyContent","onEditProblem","_c","$RefreshReg$"],"sources":["/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/pages/ManualSelectUI.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, MenuItem, Button, Grid, Box, Typography, IconButton, Select, Checkbox, ListItemText, InputLabel, FormControl } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport PreviewButton from '../components/previewButton';\n\nconst roles = [\"Junior Developer\", \"Senior Developer\", \"AI Developer\"];\n\nconst ProblemForm = () => {\n  const [testCases, setTestCases] = useState([{ inputs: [''], output: '' }]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([{ inputs: [''], output: '' }]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  const [problemData, setProblemData] = useState({\n    id: '',\n    title: '',\n    description: '',\n    level: '',\n  });\n\n  // Function to load problem data for modification\n  const loadProblemData = (problem) => {\n    setProblemData({\n      id: problem.id || '',\n      title: problem.title || '',\n      description: problem.problem_statement || '',\n      level: problem.level ? problem.level.charAt(0).toUpperCase() + problem.level.slice(1) : '',\n    });\n\n    setSelectedRoles(problem.role || []);\n\n    // Safely set test cases, ensuring each has the necessary structure\n    setTestCases(\n      problem.samples && Array.isArray(problem.samples) && problem.samples.length > 0\n        ? problem.samples.map(testCase => ({\n            inputs: testCase.input ? [...testCase.input] : [''], // Ensuring inputs is an array\n            output: testCase.output || ''\n          }))\n        : [{ inputs: [''], output: '' }]\n    );\n\n    // Safely set hidden test cases, ensuring each has the necessary structure\n    setHiddenTestCases(\n      problem.hidden_samples && Array.isArray(problem.hidden_samples) && problem.hidden_samples.length > 0\n        ? problem.hidden_samples.map(hiddenTestCase => ({\n            inputs: hiddenTestCase.input ? [...hiddenTestCase.input] : [''], // Ensuring inputs is an array\n            output: hiddenTestCase.output || ''\n          }))\n        : [{ inputs: [''], output: '' }]\n    );\n  };\n\n  const handleAddTestCase = (isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const newCases = [...cases, { inputs: [''], output: '' }];\n    isHidden ? setHiddenTestCases(newCases) : setTestCases(newCases);\n  };\n\n  const handleAddInputField = (testCaseIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs.push('');\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n\n  const handleRemoveInputField = (testCaseIndex, inputIndex, isHidden = false) => {\n    const cases = isHidden ? hiddenTestCases : testCases;\n    const updatedCases = [...cases];\n    updatedCases[testCaseIndex].inputs = updatedCases[testCaseIndex].inputs.filter((_, idx) => idx !== inputIndex);\n    isHidden ? setHiddenTestCases(updatedCases) : setTestCases(updatedCases);\n  };\n\n  const handleRoleChange = (event) => {\n    setSelectedRoles(event.target.value);\n  };\n\n  const handleProblemDataChange = (field, value) => {\n    setProblemData((prevData) => ({ ...prevData, [field]: value }));\n  };\n\n  const saveProblemAsJson = async () => {\n    const problemJson = {\n      id: parseInt(problem.id, 10),\n      title: problem.title,\n      role: selectedRoles,\n      level: problem.level.toLowerCase(),\n      problem_statement: problem.description,\n      samples: testCases.map((testCase) => ({\n        input: testCase.inputs.map(input => `${input}`),\n        output: `${testCase.output}`\n      })),\n      hidden_samples: hiddenTestCases.map((hiddenTestCase) => ({\n        input: hiddenTestCase.inputs.map(input => `${input}`),\n        output: `${hiddenTestCase.output}`\n      }))\n    };\n\n    try {\n      await axios.put('http://localhost:8000/updateQuestionById/', problemJson);\n      toast.success(\"Problem updated successfully!\");\n      onSave(); // Clear the selected problem and navigate back\n    } catch (error) {\n      toast.error(\"Failed to save problem data.\");\n      console.error(\"Error saving problem:\", error);\n    }\n  };;\n\n  return (\n    <Box p={3} bgcolor=\"#f9f9f9\" borderRadius={2} boxShadow={3} maxWidth=\"90%\" mx=\"auto\">\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Problem Form\n      </Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"ID\"\n            type=\"number\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problemData.id}\n            onChange={(e) => handleProblemDataChange('id', e.target.value)}\n          />\n          <TextField\n            fullWidth\n            label=\"Problem\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problemData.title}\n            onChange={(e) => handleProblemDataChange('title', e.target.value)}\n          />\n          <TextField\n            fullWidth\n            label=\"Description\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            multiline\n            rows={3}\n            value={problemData.description}\n            onChange={(e) => handleProblemDataChange('description', e.target.value)}\n          />\n          <Box mt={2}>\n            <Typography variant=\"h6\">Test Cases</Typography>\n            {testCases && testCases.map((testCase, testCaseIndex) => (\n              <Box key={testCaseIndex} mb={2} p={2} border=\"1px solid #ddd\" borderRadius={1}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Test Case {testCaseIndex + 1}\n                </Typography>\n                {testCase.inputs && testCase.inputs.map((input, inputIndex) => (\n                  <Box display=\"flex\" alignItems=\"center\" key={inputIndex}>\n                    <TextField\n                      fullWidth\n                      label={`Input ${inputIndex + 1}`}\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={input}\n                      onChange={(e) => {\n                        const updatedCases = [...testCases];\n                        updatedCases[testCaseIndex].inputs[inputIndex] = e.target.value;\n                        setTestCases(updatedCases);\n                      }}\n                    />\n                    {inputIndex === testCase.inputs.length - 1 && (\n                      <IconButton\n                        onClick={() => handleAddInputField(testCaseIndex)}\n                        color=\"success\"\n                        sx={{ ml: 1 }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    )}\n                    {inputIndex > 0 && (\n                      <IconButton\n                        onClick={() => handleRemoveInputField(testCaseIndex, inputIndex)}\n                        color=\"error\"\n                        sx={{ ml: 1 }}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    )}\n                  </Box>\n                ))}\n                <TextField\n                  fullWidth\n                  label=\"Output\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  value={testCase.output}\n                  onChange={(e) => {\n                    const updatedCases = [...testCases];\n                    updatedCases[testCaseIndex].output = e.target.value;\n                    setTestCases(updatedCases);\n                  }}\n                />\n                {testCaseIndex === testCases.length - 1 && (\n                  <Button\n                    onClick={() => handleAddTestCase(false)}\n                    variant=\"contained\"\n                    color=\"success\"\n                    sx={{\n                      mt: 1,\n                      px: 2,\n                      ':hover': { backgroundColor: '#66bb6a' },\n                      fontSize: '0.8rem',\n                    }}\n                  >\n                    Add Test Case\n                  </Button>\n                )}\n              </Box>\n            ))}\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n            <InputLabel>Roles</InputLabel>\n            <Select\n              multiple\n              value={selectedRoles}\n              onChange={handleRoleChange}\n              label=\"Roles\"\n              renderValue={(selected) => selected.join(', ')}\n            >\n              {roles.map((role) => (\n                <MenuItem key={role} value={role}>\n                  <Checkbox checked={selectedRoles.indexOf(role) > -1} />\n                  <ListItemText primary={role} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          \n          <TextField\n            fullWidth\n            select\n            label=\"Difficulty\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={problemData.level}\n            onChange={(e) => handleProblemDataChange('level', e.target.value)}\n          >\n            <MenuItem value=\"Easy\">Easy</MenuItem>\n            <MenuItem value=\"Medium\">Medium</MenuItem>\n            <MenuItem value=\"Hard\">Hard</MenuItem>\n          </TextField>\n          <Box mt={2}>\n            <Typography variant=\"h6\">Hidden Test Cases</Typography>\n            {hiddenTestCases && hiddenTestCases.map((hiddenTestCase, hiddenTestCaseIndex) => (\n              <Box key={hiddenTestCaseIndex} mb={2} p={2} border=\"1px solid #ddd\" borderRadius={1}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Hidden Test Case {hiddenTestCaseIndex + 1}\n                </Typography>\n                {hiddenTestCase.inputs && hiddenTestCase.inputs.map((input, inputIndex) => (\n                  <Box display=\"flex\" alignItems=\"center\" key={inputIndex}>\n                    <TextField\n                      fullWidth\n                      label={`Hidden Input ${inputIndex + 1}`}\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={input}\n                      onChange={(e) => {\n                        const updatedCases = [...hiddenTestCases];\n                        updatedCases[hiddenTestCaseIndex].inputs[inputIndex] = e.target.value;\n                        setHiddenTestCases(updatedCases);\n                      }}\n                    />\n                    {inputIndex === hiddenTestCase.inputs.length - 1 && (\n                      <IconButton\n                        onClick={() => handleAddInputField(hiddenTestCaseIndex, true)}\n                        color=\"success\"\n                        sx={{ ml: 1 }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    )}\n                    {inputIndex > 0 && (\n                      <IconButton\n                        onClick={() => handleRemoveInputField(hiddenTestCaseIndex, inputIndex, true)}\n                        color=\"error\"\n                        sx={{ ml: 1 }}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    )}\n                  </Box>\n                ))}\n                <TextField\n                  fullWidth\n                  label=\"Hidden Output\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  value={hiddenTestCase.output}\n                  onChange={(e) => {\n                    const updatedCases = [...hiddenTestCases];\n                    updatedCases[hiddenTestCaseIndex].output = e.target.value;\n                    setHiddenTestCases(updatedCases);\n                  }}\n                />\n                {hiddenTestCaseIndex === hiddenTestCases.length - 1 && (\n                  <Button\n                    onClick={() => handleAddTestCase(true)}\n                    variant=\"contained\"\n                    color=\"success\"\n                    sx={{\n                      mt: 1,\n                      px: 2,\n                      ':hover': { backgroundColor: '#66bb6a' },\n                      fontSize: '0.8rem',\n                    }}\n                  >\n                    Add Hidden Test Case\n                  </Button>\n                )}\n              </Box>\n            ))}\n          </Box>\n        </Grid>\n      </Grid>\n      \n      <Box display=\"flex\" justifyContent=\"space-between\" mt={4}>\n        <Button variant=\"contained\" onClick={saveProblemAsJson} color=\"primary\">\n          Save\n        </Button>\n        <PreviewButton onEditProblem={loadProblemData} />\n      </Box>\n\n      <ToastContainer />\n    </Box>\n  );\n};\n\nexport default ProblemForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}