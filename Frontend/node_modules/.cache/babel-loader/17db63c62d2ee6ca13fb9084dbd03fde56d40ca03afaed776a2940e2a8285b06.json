{"ast":null,"code":"var _jsxFileName = \"/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/components/ProblemDetails.js\",\n  _s = $RefreshSig$();\n// src/components/ProblemDetails.js\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProblemDetails({\n  selectedProblemId\n}) {\n  _s();\n  const [problem, setProblem] = useState(null);\n\n  // Load JSON data and find the selected problem\n  useEffect(() => {\n    fetch('/json/questions.json').then(response => response.json()).then(data => {\n      const selectedProblem = data.problems.find(problem => problem.id === parseInt(selectedProblemId));\n      console.log(\"geted\");\n      setProblem(selectedProblem);\n      console.log(setProblem(selectedProblem));\n    }).catch(error => console.error(\"Error loading JSON:\", error));\n  }, [selectedProblemId]);\n  if (!problem) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold\",\n      children: problem.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 p-4 border rounded bg-gray-100\",\n      children: problem.problem_statement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mt-4\",\n      children: \"Example Test Cases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc ml-6\",\n      children: problem.samples.map((sample, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Input: \", JSON.stringify(sample.input)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Expected Output: \", sample.output]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ProblemDetails, \"8TrojB6NRW6rmGbkgQnGq0FM5Y4=\");\n_c = ProblemDetails;\nexport default ProblemDetails;\nvar _c;\n$RefreshReg$(_c, \"ProblemDetails\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProblemDetails","selectedProblemId","_s","problem","setProblem","fetch","then","response","json","data","selectedProblem","problems","find","id","parseInt","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","problem_statement","samples","map","sample","index","JSON","stringify","input","output","_c","$RefreshReg$"],"sources":["/home/naresh/playGround/Ihub/Coding_contest/codingContest_Complier/Frontend/src/components/ProblemDetails.js"],"sourcesContent":["// src/components/ProblemDetails.js\nimport React, { useEffect, useState } from 'react';\n\nfunction ProblemDetails({ selectedProblemId }) {\n  const [problem, setProblem] = useState(null);\n\n  // Load JSON data and find the selected problem\n  useEffect(() => {\n    fetch('/json/questions.json')\n      .then((response) => response.json())\n      .then((data) => {\n        const selectedProblem = data.problems.find(\n          (problem) => problem.id === parseInt(selectedProblemId)\n          \n        );\n        console.log(\"geted\")\n        setProblem(selectedProblem);\n        console.log(setProblem(selectedProblem))\n      })\n      .catch((error) => console.error(\"Error loading JSON:\", error));\n  }, [selectedProblemId]);\n\n  if (!problem) return <div>Loading...</div>;\n\n  return (\n    <div className=\"mb-4\">\n      <h2 className=\"text-2xl font-semibold\">{problem.title}</h2>\n      <p className=\"mt-2 p-4 border rounded bg-gray-100\">{problem.problem_statement}</p>\n\n      <h3 className=\"text-lg font-semibold mt-4\">Example Test Cases</h3>\n      <ul className=\"list-disc ml-6\">\n        {problem.samples.map((sample, index) => (\n          <li key={index}>\n            <p>Input: {JSON.stringify(sample.input)}</p>\n            <p>Expected Output: {sample.output}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ProblemDetails;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,sBAAsB,CAAC,CAC1BC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,eAAe,GAAGD,IAAI,CAACE,QAAQ,CAACC,IAAI,CACvCT,OAAO,IAAKA,OAAO,CAACU,EAAE,KAAKC,QAAQ,CAACb,iBAAiB,CAExD,CAAC;MACDc,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBZ,UAAU,CAACM,eAAe,CAAC;MAC3BK,OAAO,CAACC,GAAG,CAACZ,UAAU,CAACM,eAAe,CAAC,CAAC;IAC1C,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,CAACjB,iBAAiB,CAAC,CAAC;EAEvB,IAAI,CAACE,OAAO,EAAE,oBAAOJ,OAAA;IAAAoB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE1C,oBACExB,OAAA;IAAKyB,SAAS,EAAC,MAAM;IAAAL,QAAA,gBACnBpB,OAAA;MAAIyB,SAAS,EAAC,wBAAwB;MAAAL,QAAA,EAAEhB,OAAO,CAACsB;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3DxB,OAAA;MAAGyB,SAAS,EAAC,qCAAqC;MAAAL,QAAA,EAAEhB,OAAO,CAACuB;IAAiB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElFxB,OAAA;MAAIyB,SAAS,EAAC,4BAA4B;MAAAL,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClExB,OAAA;MAAIyB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,EAC3BhB,OAAO,CAACwB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACjC/B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,GAAG,SAAO,EAACY,IAAI,CAACC,SAAS,CAACH,MAAM,CAACI,KAAK,CAAC;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5CxB,OAAA;UAAAoB,QAAA,GAAG,mBAAiB,EAACU,MAAM,CAACK,MAAM;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFhCO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CArCQF,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}